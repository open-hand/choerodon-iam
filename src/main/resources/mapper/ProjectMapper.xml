<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="io.choerodon.iam.infra.mapper.ProjectMapper">
    <resultMap id="ProjectMapCategoryMap" type="io.choerodon.iam.api.vo.ProjectMapCategoryVO" autoMapping="true">
        <association property="projectCategoryDTO" javaType="io.choerodon.iam.infra.dto.ProjectCategoryDTO">
            <result property="name" column="category_name"/>
            <result property="code" column="category_code"/>
        </association>
    </resultMap>

    <resultMap id="projectDTO" type="io.choerodon.iam.infra.dto.ProjectDTO" autoMapping="true">
        <id column="id" property="id"/>
        <result column="is_enabled" property="enabled" jdbcType="BOOLEAN"/>
        <collection property="projects" ofType="io.choerodon.iam.infra.dto.ProjectDTO">
            <id property="id" column="project_id"/>
            <result property="name" column="project_name"/>
            <result property="code" column="project_code"/>
            <result property="enabled" column="project_enabled"/>
            <result property="organizationId" column="project_organization_id"/>
            <result property="category" column="project_category"/>
        </collection>
    </resultMap>

    <resultMap id="projectDTOWithCategory" type="io.choerodon.iam.infra.dto.ProjectDTO" autoMapping="true">
        <id column="id" property="id"/>
        <result column="is_enabled" property="enabled" jdbcType="BOOLEAN"/>
        <collection property="projects" ofType="io.choerodon.iam.infra.dto.ProjectDTO">
            <id property="id" column="project_id"/>
            <result property="name" column="project_name"/>
            <result property="code" column="project_code"/>
            <result property="enabled" column="project_enabled"/>
            <result property="organizationId" column="project_organization_id"/>
            <result property="category" column="project_category"/>
        </collection>
        <collection property="categories" ofType="io.choerodon.iam.infra.dto.ProjectCategoryDTO"
                    autoMapping="true" notNullColumn="category_id">
            <id property="id" column="category_id"/>
            <result property="name" column="category_name"/>
            <result property="code" column="category_code"/>
            <result property="organizationId" column="category_org_id"/>
            <result property="objectVersionNumber" column="category_version_number"/>
            <result property="createdBy" column="category_created_by"/>
            <result property="creationDate" column="category_creation_date"/>
        </collection>
    </resultMap>

    <resultMap id="projectWithRoleDTO" type="io.choerodon.iam.infra.dto.ProjectDTO" autoMapping="true">
        <id column="id" property="id"/>
        <result column="is_enabled" property="enabled" jdbcType="BOOLEAN"/>
        <collection property="roles" ofType="org.hzero.iam.domain.entity.Role"
                    autoMapping="true" notNullColumn="role_id">
            <id property="id" column="role_id"/>
            <result property="name" column="role_name"/>
            <result property="code" column="role_code"/>
            <result property="enabled" column="role_is_enabled"/>
            <result property="tenantId" column="role_org_id"/>
            <result property="objectVersionNumber" column="role_version_number"/>
            <result property="createdBy" column="role_created_by"/>
            <result property="creationDate" column="role_creation_date"/>
        </collection>
    </resultMap>

    <resultMap id="projectWithCategoryMap" type="io.choerodon.iam.infra.dto.ProjectDTO" autoMapping="true">
        <id column="id" property="id"/>
        <result column="is_enabled" property="enabled" jdbcType="BOOLEAN"/>
        <collection property="categories" ofType="io.choerodon.iam.infra.dto.ProjectCategoryDTO"
                    autoMapping="true" notNullColumn="category_id">
            <id property="id" column="category_id"/>
            <result property="name" column="category_name"/>
            <result property="code" column="category_code"/>
            <result property="organizationId" column="category_org_id"/>
            <result property="objectVersionNumber" column="category_version_number"/>
        </collection>
    </resultMap>

    <resultMap id="projectMap" type="io.choerodon.iam.infra.dto.ProjectDTO" autoMapping="true">
        <id column="id" property="id"/>
        <result column="is_enabled" property="enabled" jdbcType="BOOLEAN"/>
    </resultMap>

    <resultMap id="projectWithRoleAndCategoryDTO" type="io.choerodon.iam.infra.dto.ProjectDTO" autoMapping="true">
        <id column="id" property="id"/>
        <result column="is_enabled" property="enabled" jdbcType="BOOLEAN"/>
        <collection property="roles" ofType="org.hzero.iam.domain.entity.Role"
                    autoMapping="true" notNullColumn="role_id">
            <id property="id" column="role_id"/>
            <result property="name" column="role_name"/>
            <result property="code" column="role_code"/>
            <result property="enabled" column="role_is_enabled"/>
            <result property="tenantId" column="role_org_id"/>
            <result property="objectVersionNumber" column="role_version_number"/>
            <result property="createdBy" column="role_created_by"/>
            <result property="creationDate" column="role_creation_date"/>
        </collection>
        <collection property="categories" ofType="io.choerodon.iam.infra.dto.ProjectCategoryDTO"
                    autoMapping="true" notNullColumn="category_id">
            <id property="id" column="category_id"/>
            <result property="name" column="category_name"/>
            <result property="code" column="category_code"/>
            <result property="organizationId" column="category_org_id"/>
            <result property="objectVersionNumber" column="category_version_number"/>
            <result property="createdBy" column="category_created_by"/>
            <result property="creationDate" column="category_creation_date"/>
        </collection>
    </resultMap>


    <select id="listUserIds" resultType="java.lang.Long">
        SELECT
        iam_user.id
        FROM
        iam_user
        INNER JOIN (
        SELECT DISTINCT
        imr.member_id
        FROM
        fd_project_permission fpu
        INNER JOIN iam_member_role imr ON fpu.MEMBER_ROLE_ID = imr.id
        WHERE
        fpu.PROJECT_ID = #{projectId}
        ) t ON iam_user.id = t.member_id
    </select>

    <select id="selectUserProjectsUnderOrg" resultMap="projectDTO">
        SELECT DISTINCT
        fp.*
        FROM
        fd_project fp
        INNER JOIN hzero_platform.iam_member_role imr ON imr.source_id = fp.ORGANIZATION_ID
        INNER JOIN hzero_platform.fd_project_permission pu ON pu.MEMBER_ROLE_ID = imr.id
        WHERE imr.member_id = #{userId}
        AND fp.organization_id = #{orgId}
        AND fp.id = pu.PROJECT_ID
        <if test="isEnabled != null">
            AND is_enabled = #{isEnabled}
        </if>
    </select>

    <select id="countProjectsWithRolesSize" resultType="int">
        SELECT COUNT(1)
        FROM fd_project fp
        INNER JOIN fd_project_permission fpu ON fpu.project_id = fp.id
        INNER JOIN iam_member_role imr ON fpu.MEMBER_ROLE_ID = imr.id
        LEFT JOIN iam_role ir ON imr.role_id = ir.id
        LEFT JOIN hpfm_tenant fo ON fp.organization_id = fo.tenant_id
        WHERE imr.member_id = #{id}
        <if test="params != null">
            AND (
            fp.name LIKE concat(concat('%', #{params}), '%') OR
            fp.code LIKE concat(concat('%', #{params}), '%')
            )
        </if>
    </select>

    <select id="selectProjectsWithRoles" resultMap="projectWithRoleDTO">
        SELECT
        fp.id,
        fp.name,
        fp.code,
        fp.organization_id,
        fo.tenant_name AS organization_name,
        fo.tenant_num AS organization_code,
        fp.is_enabled,
        ir.id AS role_id,
        ir.name AS role_name,
        ir.code AS role_code,
        ir.is_enabled AS role_is_enabled,
        ir.h_tenant_id as role_org_id,
        ir.object_version_number as role_version_number,
        ir.created_by as role_created_by,
        ir.creation_date as role_creation_date
        FROM fd_project fp
        INNER JOIN fd_project_permission fpu ON fpu.project_id = fp.id
        INNER JOIN iam_member_role imr ON fpu.MEMBER_ROLE_ID = imr.id
        LEFT JOIN iam_role ir ON imr.role_id = ir.id
        LEFT JOIN hpfm_tenant fo ON fp.organization_id = fo.tenant_id
        WHERE imr.member_id = #{id}
        <if test="params != null">
            AND (
            fp.name LIKE concat(concat('%', #{params}), '%') OR
            fp.code LIKE concat(concat('%', #{params}), '%')
            )
        </if>
    </select>

    <select id="projectEnabled" resultType="java.lang.Boolean">
        SELECT is_enabled FROM fd_project WHERE id = #{sourceId}
    </select>

    <select id="selectByProjectIds" resultMap="projectDTOWithCategory">
        select fp.*,
        fpc.id as category_id,
        fpc.code as category_code,
        fpc.name as category_name,
        ht.`tenant_name` AS tenant_name
        from fd_project fp
        left join fd_project_map_category fpmc ON fpmc.PROJECT_ID = fp.id
        left join fd_project_category fpc ON fpc.id =fpmc.CATEGORY_ID
        LEFT JOIN hpfm_tenant ht ON fp.ORGANIZATION_ID = ht.tenant_id
        where fp.id in
        <foreach item="id" index="index" collection="ids"
                 open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="selectProjectNameByType" resultType="java.lang.String">
        SELECT
        NAME
        FROM
        fd_project
        WHERE
        TYPE = #{type}
        AND organization_id = #{orgId}
    </select>

    <select id="selectProjectNameNoType" resultType="java.lang.String">
        SELECT
        NAME
        FROM
        fd_project
        WHERE
        TYPE IS NULL
        AND organization_id = #{orgId};
    </select>


    <select id="selectCategoryByPrimaryKey" resultMap="projectWithCategoryMap">
        select fp.*,
        fpc.id as category_id,
        fpc.name as category_name,
        fpc.code as category_code,
        fpc.object_version_number as category_version_number,
        fpc.organization_id as category_org_id
        from fd_project fp
        left join fd_project_map_category fpmc on fp.id = fpmc.project_id
        left join fd_project_category fpc on fpc.id = fpmc.category_id
        Where fp.id = #{projectId}
        order by fpmc.id asc
    </select>


    <select id="selectByOrgIdAndCategory" resultType="io.choerodon.iam.infra.dto.ProjectDTO">
        select * from
        fd_project fp
        WHERE fp.organization_id=#{organizationId}
        AND fp.is_enabled=1
        <if test="param != null">
            AND (
            fp.name like concat(concat('%',#{param}),'%')
            )
        </if>
    </select>

    <select id="selectByOrgIdAndCategoryEnable" resultType="io.choerodon.iam.infra.dto.ProjectDTO">
        select * from
        fd_project fp
        left join fd_project_map_category fpmc ON fpmc.PROJECT_ID = fp.id
        left join fd_project_category fpc ON fpc.id =fpmc.CATEGORY_ID
        WHERE fp.organization_id=#{organizationId}
        AND fpc.CODE = #{agile}
        AND fp.is_enabled=1
        <if test="param != null">
            AND (
            fp.name like concat(concat('%',#{param}),'%')
            )
        </if>
    </select>

    <select id="selectProjectAndCategoryId" resultType="io.choerodon.iam.infra.dto.ProjectMapCategoryDTO">
        select
        p.id as projectId,
        pc.id as categoryId
        from
        fd_project p
        left join FD_PROJECT_CATEGORY pc
        on p.CATEGORY=pc.CODE
    </select>

    <select id="selectProjectsByUserIdOrAdmin" resultMap="projectMap">
        SELECT fp.*,
        iu.real_name as create_user_name,
        iu.image_url as create_user_image_url,
        null as program_name
        FROM fd_project fp
        left join iam_user iu on iu.id = fp.created_by
        <choose>
            <when test="!isAdmin and !isOrgAdmin">
                INNER JOIN fd_project_permission fpu ON fpu.PROJECT_ID = fp.id
                INNER JOIN iam_member_role imr ON imr.id = fpu.MEMBER_ROLE_ID
                INNER JOIN iam_role ir ON (ir.is_enabled = 1 and ir.id = imr.role_id)
            </when>
            <when test="projectSearchVO != null and projectSearchVO.category != null">
                INNER JOIN fd_project_map_category fpmc ON fpmc.PROJECT_ID = fp.id
                INNER Join fd_project_category fpc ON fpmc.CATEGORY_ID = fpc.id
            </when>
            <otherwise>
                LEFT JOIN fd_project_permission fpu ON fpu.PROJECT_ID = fp.id
                LEFT JOIN iam_member_role imr ON imr.id = fpu.MEMBER_ROLE_ID
                LEFT JOIN iam_role ir ON (ir.is_enabled = 1 and ir.id = imr.role_id)
            </otherwise>
    </choose>
        <if test="projectSearchVO.categoryId != null">
            INNER JOIN fd_project_map_category fpmc ON fpmc.PROJECT_ID = fp.id
            INNER Join fd_project_category fpc ON fpmc.CATEGORY_ID = fpc.id
        </if>
        <where>
            fp.organization_id = #{organizationId}
            <if test="!isAdmin and !isOrgAdmin">
                AND imr.member_id = #{userId}
                AND imr.member_type = 'user'
                AND imr.source_type = 'organization'
                AND imr.source_id = #{organizationId}
            </if>

            <if test="projectSearchVO != null">
                <if test="projectSearchVO.categoryId != null">
                    AND fpmc.CATEGORY_ID = #{projectSearchVO.categoryId}
                </if>
                <if test="projectSearchVO.name != null">
                    AND fp.name LIKE concat(concat('%',#{projectSearchVO.name}),'%')
                </if>
                <if test="projectSearchVO.code != null">
                    AND fp.code LIKE concat(concat('%',#{projectSearchVO.code}),'%')
                </if>
                <if test="projectSearchVO.category != null">
                    <!--                    AND fp.category LIKE concat(concat('%',#{projectDTO.category}),'%')-->
                    AND fpc.CODE = #{projectSearchVO.category}
                </if>
                <if test="projectSearchVO.enabled != null">
                    AND fp.is_enabled = #{projectSearchVO.enabled}
                </if>
                <if test="projectSearchVO.createdBy != null">
                    AND fp.created_by = #{userId}
                </if>
                <if test="projectSearchVO.searchContent != null and projectSearchVO.searchContent.length > 0">
                    AND (
                    fp.name LIKE concat(concat('%', #{projectSearchVO.searchContent}), '%') OR
                    fp.code LIKE concat(concat('%', #{projectSearchVO.searchContent}), '%') OR
                    fp.DESCRIPTION LIKE concat(concat('%', #{projectSearchVO.searchContent}), '%')
                    )
                </if>
            </if>
        </where>
        GROUP BY fp.id
                order by
        <if test="projectSearchVO != null">
            <if test="projectSearchVO.id != null">
                fp.id = #{projectSearchVO.id} desc,
            </if>
        </if>
        fp.is_enabled desc,fp.creation_date desc
    </select>

    <select id="selectProjectIdsByUserIdOrAdmin" resultType="long">
        SELECT fp.id
        FROM fd_project fp
        left join iam_user iu on iu.id = fp.created_by
        <choose>
            <when test="!isAdmin and !isOrgAdmin">
                INNER JOIN fd_project_permission fpu ON fpu.PROJECT_ID = fp.id
                INNER JOIN iam_member_role imr ON imr.id = fpu.MEMBER_ROLE_ID
                INNER JOIN iam_role ir ON (ir.is_enabled = 1 and ir.id = imr.role_id)
            </when>
            <otherwise>
                LEFT JOIN fd_project_permission fpu ON fpu.PROJECT_ID = fp.id
                LEFT JOIN iam_member_role imr ON imr.id = fpu.MEMBER_ROLE_ID
                LEFT JOIN iam_role ir ON (ir.is_enabled = 1 and ir.id = imr.role_id)
            </otherwise>
        </choose>
        <where>
            fp.organization_id = #{organizationId}
            AND fp.is_enabled = 1
            <if test="!isAdmin and !isOrgAdmin">
                AND imr.member_id = #{userId}
                AND imr.member_type = 'user'
                AND imr.source_type = 'organization'
                AND imr.source_id = #{organizationId}
            </if>
        </where>
        GROUP BY fp.id
    </select>

    <select id="selectAllProjectsByUserIdOrAdmin" resultMap="projectWithCategoryMap">
        SELECT DISTINCT fp.*,
        fpc.id as category_id,
        fpc.name as category_name,
        fpc.code as category_code,
        fpc.object_version_number as category_version_number,
        fpc.organization_id as category_org_id
        FROM fd_project fp
        inner join fd_project_map_category fpmc on fp.id = fpmc.project_id
        inner join fd_project_category fpc on (fpc.id = fpmc.category_id and (fpc.code = 'AGILE' or fpc.code = 'GENERAL'
        or fpc.code='PROGRAM'))
        <if test="!isAdmin">
            INNER JOIN fd_project_permission fpu ON fpu.PROJECT_ID = fp.id
            INNER JOIN iam_member_role imr ON imr.id = fpu.MEMBER_ROLE_ID
            INNER JOIN iam_role ir ON (ir.is_enabled = 1 and ir.id = imr.role_id)
        </if>
        <where>
            <if test="!isAdmin">
                AND imr.member_id = #{userId}
                AND imr.member_type = 'user'
            </if>
            <if test="projectDTO != null">
                <if test="projectDTO.enabled != null">
                    AND fp.is_enabled = #{projectDTO.enabled}
                </if>
            </if>
        </where>
    </select>

    <select id="selectProjectsByOptions" resultMap="projectDTO">
        select fp.*
        from fd_project fp
        where fp.organization_id = #{organizationId}
        <if test="projectDTO != null">
            <if test="projectDTO.name != null">
                AND fp.name like concat(concat('%',#{projectDTO.name}),'%')
            </if>
            <if test="projectDTO.code != null">
                AND fp.code like concat(concat('%',#{projectDTO.code}),'%')
            </if>
            <if test="projectDTO.enabled != null">
                AND fp.is_enabled = #{projectDTO.enabled}
            </if>
            <if test="params != null">
                AND (
                fp.name like concat(concat('%', #{params}), '%') OR
                fp.code like concat(concat('%', #{params}), '%')
                )
            </if>
        </if>
        <if test="ignoredProjectIds != null and ignoredProjectIds.size() > 0">
            and fp.id not in
            <foreach collection="ignoredProjectIds" item="ignoredProjectId" open="(" separator="," close=")" index="i">
                #{ignoredProjectId}
            </foreach>
        </if>
        order by
        <if test="orderBy != null and orderBy != ''">
            ${orderBy},
        </if>
        fp.id desc
    </select>

    <select id="selectProjectsByUserId" resultMap="projectDTO">
        select distinct fp.*
        from fd_project fp
        INNER JOIN fd_project_permission fpu ON (fp.id = fpu.PROJECT_ID)
        INNER JOIN iam_member_role imr ON (imr.id = fpu.MEMBER_ROLE_ID)
        <where>
            imr.member_id = #{userId}
            AND imr.member_type = 'user'
            <if test="projectDTO != null">
                <if test="projectDTO.organizationId != null">
                    AND fp.organization_id = #{projectDTO.organizationId}
                </if>
                <if test="projectDTO.name != null ">
                    AND fp.name LIKE concat(concat('%',#{projectDTO.name}),'%')
                </if>
                <if test="projectDTO.enabled != null">
                    AND fp.is_enabled = #{projectDTO.enabled}
                </if>
            </if>
        </where>
    </select>

    <select id="getProListByName" resultType="java.lang.Long">
        select fp.id
        from fd_project fp
        WHERE 1=1
        <if test="name != null">
            AND fp.name LIKE concat(concat('%',#{name}),'%')
        </if>
    </select>
    <select id="selectProjectsByOrgIdAndNameWithLimit" resultType="io.choerodon.iam.infra.dto.ProjectDTO">
        select fp.*
        from fd_project fp
        where fp.organization_id = #{organizationId}
        <if test="name != null">
            AND fp.name LIKE concat(concat('%',#{name}),'%')
        </if>
        order by fp.creation_date desc
        <if test="limit != null">
            limit #{limit}
        </if>
    </select>
    <select id="listUserManagedProjectInOrg" resultType="java.lang.Long">
        <bind name="roleLabelDataType" value="@org.hzero.iam.domain.entity.Role@LABEL_DATA_TYPE"/>
        SELECT fpu.PROJECT_ID
        FROM iam_member_role imr
        INNER JOIN iam_role ir ON ir.id = imr.role_id
        INNER JOIN hiam_label_rel hlr on (hlr.data_type = #{roleLabelDataType} AND hlr.data_id = ir.id)
        INNER JOIN iam_label il ON il.id = hlr.label_id
        INNER JOIN fd_project_permission fpu ON fpu.MEMBER_ROLE_ID = imr.id
        <where>
            imr.member_type = 'user' AND imr.member_id = #{userId} AND imr.source_type = 'organization'
            AND imr.source_id = #{organizationId} AND il.name = 'PROJECT_ADMIN'
        </where>
    </select>
    <select id="listProjectCategory" resultMap="ProjectMapCategoryMap">
        SELECT fpmc.*,
        fpc.name AS category_name, fpc.CODE AS category_code
        FROM fd_project_map_category fpmc
        INNER JOIN fd_project_category fpc ON fpc.ID = fpmc.CATEGORY_ID
        WHERE fpmc.PROJECT_ID IN
        <foreach collection="projectIdList" item="pid" open="(" separator="," close=")" index="i">
            #{pid}
        </foreach>
    </select>
    <select id="selectProjectsWithCategoryAndRoleByUserIdOrAdmin" resultMap="projectWithRoleAndCategoryDTO">
        SELECT fp.*,
        iu.real_name as create_user_name,
        iu.image_url as create_user_image_url,
        null as program_name,
        ir.id AS role_id,
        ir.name AS role_name,
        ir.code AS role_code,
        ir.is_enabled AS role_is_enabled,
        ir.h_tenant_id as role_org_id,
        ir.object_version_number as role_version_number,
        ir.created_by as role_created_by,
        ir.creation_date as role_creation_date,
        fpc.id as category_id,
        fpc.name as category_name,
        fpc.code as category_code,
        fpc.object_version_number as category_version_number,
        fpc.organization_id as category_org_id,
        fpc.created_by as category_created_by,
        fpc.creation_date as category_creation_date
        FROM fd_project fp
        inner join fd_project_map_category fpmc on fp.id = fpmc.project_id
        inner join fd_project_category fpc on fpc.id = fpmc.category_id
        left join iam_user iu on iu.id = fp.created_by
        <choose>
            <when test="!isAdmin and !isOrgAdmin">
                INNER JOIN fd_project_permission fpu ON fpu.PROJECT_ID = fp.id
                INNER JOIN iam_member_role imr ON imr.id = fpu.MEMBER_ROLE_ID
                INNER JOIN iam_role ir ON (ir.is_enabled = 1 and ir.id = imr.role_id)
            </when>
            <otherwise>
                LEFT JOIN fd_project_permission fpu ON fpu.PROJECT_ID = fp.id
                LEFT JOIN iam_member_role imr ON imr.id = fpu.MEMBER_ROLE_ID
                LEFT JOIN iam_role ir ON (ir.is_enabled = 1 and ir.id = imr.role_id)
            </otherwise>
        </choose>
        <where>
            fp.organization_id = #{organizationId}

            <if test="!isAdmin and !isOrgAdmin">
                AND imr.member_id = #{userId}
                AND imr.member_type = 'user'
                AND imr.source_type = 'organization'
                AND imr.source_id = #{organizationId}
            </if>

            <if test="projectDTO != null">
                <if test="projectDTO.name != null">
                    AND fp.name LIKE concat(concat('%',#{projectDTO.name}),'%')
                </if>
                <if test="projectDTO.code != null">
                    AND fp.code LIKE concat(concat('%',#{projectDTO.code}),'%')
                </if>
                <if test="projectDTO.category != null">
                    AND fp.category LIKE concat(concat('%',#{projectDTO.category}),'%')
                </if>
                <if test="projectDTO.enabled != null">
                    AND fp.is_enabled = #{projectDTO.enabled}
                </if>
                <if test="projectDTO.createdBy != null">
                    AND fp.created_by = #{userId}
                </if>
            </if>
            <if test="params != null">
                AND (
                fp.name LIKE concat(concat('%', #{params}), '%') OR
                fp.code LIKE concat(concat('%', #{params}), '%')
                )
            </if>
        </where>
        order by fp.is_enabled desc,fp.creation_date desc, fpmc.id asc
    </select>

    <select id="listProjectsByUserIdForSimple" resultType="io.choerodon.iam.infra.dto.ProjectDTO">
        SELECT
        DISTINCT fp.id,
        fp.`CODE`,
        fp.`NAME`,
        fp.IS_ENABLED,
        fp.IMAGE_URL,
        fp.creation_date
        FROM fd_project fp
        <if test="!isAdmin and !isOrgAdmin">
            INNER JOIN fd_project_permission fpu ON fpu.PROJECT_ID = fp.id
            INNER JOIN iam_member_role imr ON imr.id = fpu.MEMBER_ROLE_ID
            AND imr.member_id = #{userId}
            AND imr.member_type = 'user'
            AND imr.source_type = 'organization'
            AND imr.source_id = #{organizationId}
            INNER JOIN iam_role ir ON (ir.is_enabled = 1 and ir.id = imr.role_id)
        </if>
        <if test="projectDTO.category != null">
            inner join fd_project_map_category fpmc on fp.id = fpmc.project_id
            inner join fd_project_category fpc on fpc.id = fpmc.category_id and fpc.code=#{projectDTO.category}
        </if>
        where fp.organization_id = #{organizationId}
            <if test="projectDTO != null">
                <if test="projectDTO.name != null">
                    AND fp.name LIKE concat(concat('%',#{projectDTO.name}),'%')
                </if>
                <if test="projectDTO.code != null">
                    AND fp.code LIKE concat(concat('%',#{projectDTO.code}),'%')
                </if>
                <if test="projectDTO.enabled != null">
                    AND fp.is_enabled = #{projectDTO.enabled}
                </if>
            </if>
            <if test="params != null">
                AND (
                fp.name LIKE concat(concat('%', #{params}), '%') OR
                fp.code LIKE concat(concat('%', #{params}), '%')
                )
            </if>
    </select>

    <select id="listOwnedProjects" resultMap="projectDTO">
        SELECT fp.*
        FROM fd_project fp
        <choose>
            <when test="!isAdmin and !isOrgAdmin">
                INNER JOIN fd_project_permission fpu ON fpu.PROJECT_ID = fp.id
                INNER JOIN iam_member_role imr ON imr.id = fpu.MEMBER_ROLE_ID
                INNER JOIN iam_role ir ON (ir.is_enabled = 1 and ir.id = imr.role_id)
            </when>
            <otherwise>
                LEFT JOIN fd_project_permission fpu ON fpu.PROJECT_ID = fp.id
                LEFT JOIN iam_member_role imr ON imr.id = fpu.MEMBER_ROLE_ID
                LEFT JOIN iam_role ir ON (ir.is_enabled = 1 and ir.id = imr.role_id)
            </otherwise>
        </choose>
        <where>
            fp.organization_id = #{organizationId} AND fp.is_enabled = true

            <if test="!isAdmin and !isOrgAdmin">
                AND imr.member_id = #{userId}
                AND imr.member_type = 'user'
                AND imr.source_type = 'organization'
                AND imr.source_id = #{organizationId}
            </if>
        </where>
        GROUP BY fp.id
    </select>

    <select id="pageOwnedProjects" resultMap="projectDTO">
        SELECT fp.*
        FROM fd_project fp
        <choose>
            <when test="!isAdmin and !isOrgAdmin">
                INNER JOIN fd_project_permission fpu ON fpu.PROJECT_ID = fp.id
                INNER JOIN iam_member_role imr ON imr.id = fpu.MEMBER_ROLE_ID
                INNER JOIN iam_role ir ON (ir.is_enabled = 1 and ir.id = imr.role_id)
            </when>
            <otherwise>
                LEFT JOIN fd_project_permission fpu ON fpu.PROJECT_ID = fp.id
                LEFT JOIN iam_member_role imr ON imr.id = fpu.MEMBER_ROLE_ID
                LEFT JOIN iam_role ir ON (ir.is_enabled = 1 and ir.id = imr.role_id)
            </otherwise>
        </choose>
        <where>
            fp.organization_id = #{organizationId} AND fp.is_enabled = true

            <if test="!isAdmin and !isOrgAdmin">
                AND imr.member_id = #{userId}
                AND imr.member_type = 'user'
                AND imr.source_type = 'organization'
                AND imr.source_id = #{organizationId}
            </if>
            <if test="param != null and param != ''">
                AND (
                fp.NAME LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}), '%')
                OR fp.CODE LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}), '%'))
            </if>
        </where>
        GROUP BY fp.id
        ORDER BY fp.ID=#{currentProjectId} DESC
    </select>

    <select id="selectProjectWithCategoryByPrimaryKey" resultMap="projectWithCategoryMap">
        select fp.*,
        fpc.id as category_id,
        fpc.name as category_name,
        fpc.code as category_code,
        fpc.object_version_number as category_version_number,
        fpc.organization_id as category_org_id,
        iu.real_name as create_user_name,
        iu.image_url as create_user_image_url
        from fd_project fp
        left join fd_project_map_category fpmc on fp.id = fpmc.project_id
        left join fd_project_category fpc on fpc.id = fpmc.category_id
        left join iam_user iu on fp.CREATED_BY=iu.id
        Where fp.id IN
        <foreach collection="projectIds" item="projectId" separator="," open="(" close=")">
            #{projectId}
        </foreach>
        order by fpmc.id asc
    </select>

    <select id="checkPermissionByProjectId" resultType="java.lang.Integer">
        SELECT
        COUNT(*)
        FROM
        fd_project_permission fpp
        JOIN iam_member_role imr ON imr.id = fpp.MEMBER_ROLE_ID
        AND imr.member_id = #{userId}
        AND imr.member_type = 'user'
        AND imr.source_id = #{organizationId}
        AND imr.source_type = 'organization'
        JOIN fd_project fp ON fp.ID = fpp.PROJECT_ID
        AND fp.IS_ENABLED = 1
        WHERE
        fpp.PROJECT_ID = #{projectId}
    </select>


    <select id="listCategoryByProjectId" resultType="java.lang.String">
        SELECT
        fdc.`CODE`
        FROM
        fd_project_map_category fpmc
        LEFT JOIN fd_project_category fdc ON fdc.id = fpmc.CATEGORY_ID
        WHERE
        fpmc.PROJECT_ID = #{projectId}
    </select>
    <select id="selectWithCategory" resultMap="projectWithCategoryMap">
        select fp.*,
        fpc.id as category_id,
        fpc.name as category_name,
        fpc.code as category_code,
        fpc.object_version_number as category_version_number,
        fpc.organization_id as category_org_id
        FROM
        fd_project fp
        JOIN fd_project_map_category fpmc ON fp.ID = fpmc.PROJECT_ID
        JOIN fd_project_category fpc ON fpc.ID = fpmc.CATEGORY_ID
        WHERE
        fp.ORGANIZATION_ID = #{organizationId}
        <if test="projectSearchVO != null">

            <if test="projectSearchVO.categoryIds !=null and projectSearchVO.categoryIds.size>0">
                AND fpc.id IN
                <foreach collection="projectSearchVO.categoryIds" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
            <if test="projectSearchVO.categoryCodes !=null and projectSearchVO.categoryCodes.size>0">
                AND fpc.code IN
                <foreach collection="projectSearchVO.categoryCodes" item="code" open="(" separator="," close=")">
                    #{code}
                </foreach>
            </if>

            <if test="projectSearchVO.enable !=null">
                AND fp.is_enabled = #{projectSearchVO.enable}
            </if>
        </if>


    </select>

    <select id="listProjectOfDevopsOrOperations" resultType="io.choerodon.iam.infra.dto.ProjectDTO">
        SELECT DISTINCT fp.*,
        ht.tenant_name as organizationName,
        ht.tenant_id as organizationId
        FROM fd_project fp
        inner join hpfm_tenant ht on fp.organization_id=ht.tenant_id
        inner join fd_project_map_category fpmc on fp.id = fpmc.project_id
        inner join fd_project_category fpc on (fpc.id = fpmc.category_id and (fpc.code = 'N_DEVOPS' or fpc.code =
        'N_OPERATIONS'))
        <if test="!isAdmin">
            INNER JOIN fd_project_permission fpu ON fpu.PROJECT_ID = fp.id
            INNER JOIN iam_member_role imr ON imr.id = fpu.MEMBER_ROLE_ID
            INNER JOIN iam_role ir ON (ir.is_enabled = 1 and ir.id = imr.role_id)
        </if>
        <where>
            fp.is_enabled = 1
            <if test="projectName!=null and projectName!=''">
                AND fp.name like concat(concat('%', #{projectName}), '%')
            </if>
            <if test="!isAdmin">
                AND imr.member_id = #{userId}
                AND imr.member_type = 'user'
            </if>
        </where>
    </select>

    <select id="queryImmutableProjectInfo" resultType="io.choerodon.iam.api.vo.ImmutableProjectInfoVO">
        SELECT fd.CODE AS proj_code, ht.tenant_id, ht.tenant_num, fd.devops_component_code
        FROM fd_project fd
        INNER JOIN hpfm_tenant ht ON fd.ORGANIZATION_ID = ht.tenant_id
        WHERE fd.ID = #{projectId};
    </select>

    <select id="listProjectIdsInOrg" resultType="java.lang.Long">
        SELECT id
        FROM fd_project
        WHERE fd_project.ORGANIZATION_ID = #{tenantId}
    </select>

    <select id="selectDisableProjectByProjectMember" resultType="java.lang.Integer">
        SELECT
        count(1)
        FROM
        fd_project fp
        LEFT JOIN iam_user iu ON iu.id = fp.created_by
        INNER JOIN fd_project_permission fpu ON fpu.PROJECT_ID = fp.id
        INNER JOIN iam_member_role imr ON imr.id = fpu.MEMBER_ROLE_ID
        INNER JOIN iam_role ir ON ( ir.is_enabled = 1 AND ir.id = imr.role_id )
        JOIN hiam_label_rel hlr on hlr.data_id = ir.id
        Left JOIN iam_label il on il.id = hlr.label_id
        WHERE
        fp.organization_id = #{tenantId}
        AND imr.member_id = #{userId}
        AND imr.member_type = 'user'
        AND imr.source_type = 'organization'
        AND imr.source_id = #{tenantId}
        AND fp.is_enabled= 0
        AND hlr.data_type = 'ROLE'
        AND il.name = 'PROJECT_MEMBER'
        ORDER BY
        fp.is_enabled DESC,
        fp.creation_date DESC

    </select>

    <select id="listProjectIdsForUserId" resultType="java.lang.Long">
        SELECT
        fp.id
        FROM
        fd_project fp
        JOIN iam_member_role imr ON imr.member_id = #{userId}
        AND imr.member_type = 'user'
        AND imr.source_id = #{tenantId}
        AND imr.source_type = 'organization'
        JOIN fd_project_permission fpp ON fpp.PROJECT_ID = fp.id
        AND fpp.MEMBER_ROLE_ID = imr.id
        WHERE
        fp.ORGANIZATION_ID = #{tenantId}
    </select>
    <select id="listProjectsByCategoryAndOrgId" resultType="io.choerodon.iam.infra.dto.ProjectDTO">
        SELECT *
        FROM fd_project fp
        LEFT JOIN fd_project_map_category fpmc ON fp.id = fpmc.PROJECT_ID
        LEFT JOIN fd_project_category fpc ON fpc.ID = fpmc.CATEGORY_ID
        WHERE fpc.CODE = #{categoryCode} and fp.ORGANIZATION_ID = #{organizationId}
    </select>

    <select id="selectProjectsByOption" resultMap="projectMap">
        SELECT fp.*,
        iu.real_name as create_user_name,
        iu.image_url as create_user_image_url,
        null as program_name
        FROM fd_project fp
        left join iam_user iu on iu.id = fp.created_by
        <choose>
            <when test="!isAdmin and !isOrgAdmin">
                INNER JOIN fd_project_permission fpu ON fpu.PROJECT_ID = fp.id
                INNER JOIN iam_member_role imr ON imr.id = fpu.MEMBER_ROLE_ID
                INNER JOIN iam_role ir ON (ir.is_enabled = 1 and ir.id = imr.role_id)
            </when>
            <when test="projectDTO != null and projectDTO.category != null">
                INNER JOIN fd_project_map_category fpmc ON fpmc.PROJECT_ID = fp.id
                INNER Join fd_project_category fpc ON fpmc.CATEGORY_ID = fpc.id
            </when>
            <otherwise>
                LEFT JOIN fd_project_permission fpu ON fpu.PROJECT_ID = fp.id
                LEFT JOIN iam_member_role imr ON imr.id = fpu.MEMBER_ROLE_ID
                LEFT JOIN iam_role ir ON (ir.is_enabled = 1 and ir.id = imr.role_id)
            </otherwise>
        </choose>
        <where>
            fp.organization_id = #{organizationId}

            <if test="!isAdmin and !isOrgAdmin">
                AND imr.member_id = #{userId}
                AND imr.member_type = 'user'
                AND imr.source_type = 'organization'
                AND imr.source_id = #{organizationId}
            </if>

            <if test="projectDTO != null">
                <if test="projectDTO.filterProjectIds != null and projectDTO.filterProjectIds.size > 0">
                    AND fp.id not in
                    <foreach collection="projectDTO.filterProjectIds" item="filterProjectId" open="(" close=")"
                             separator=",">
                        #{filterProjectId}
                    </foreach>
                </if>
                <if test="projectDTO.name != null">
                    AND fp.name LIKE concat(concat('%',#{projectDTO.name}),'%')
                </if>
                <if test="projectDTO.code != null">
                    AND fp.code LIKE concat(concat('%',#{projectDTO.code}),'%')
                </if>
                <if test="projectDTO.category != null">
                    <!--                    AND fp.category LIKE concat(concat('%',#{projectDTO.category}),'%')-->
                    AND fpc.CODE = #{projectDTO.category}
                </if>
                <if test="projectDTO.enable != null">
                    AND fp.is_enabled = #{projectDTO.enable}
                </if>
                <if test="projectDTO.createdBy != null">
                    AND fp.created_by = #{userId}
                </if>
            </if>
            <if test="params != null">
                AND (
                fp.name LIKE concat(concat('%', #{params}), '%') OR
                fp.code LIKE concat(concat('%', #{params}), '%')
                )
            </if>
        </where>
        GROUP BY fp.id
        order by
        <if test="projectDTO!=null">
            <if test="projectDTO.id !=null">
                fp.id=#{projectDTO.id} desc,
            </if>
        </if>
        fp.is_enabled desc,fp.creation_date desc
    </select>

    <select id="listProjectsByOrgId" resultType="io.choerodon.iam.infra.dto.ProjectDTO">
        SELECT fp.*

        FROM fd_project fp
        inner join fd_project_map_category fpmc on fp.id = fpmc.project_id
        inner join fd_project_category fpc on fpc.id = fpmc.category_id
        where
        fp.organization_id = #{tenantId}
        <if test="category != null and category != ''">
            AND fpc.`CODE`= #{category}
        </if>
        <if test="enabled != null and enabled">
            AND fp.IS_ENABLED=1
        </if>
        <if test="enabled != null and !enabled">
            AND fp.IS_ENABLED=0
        </if>
        GROUP BY fp.ID

    </select>

</mapper>
