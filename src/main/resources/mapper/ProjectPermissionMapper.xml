<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="io.choerodon.iam.infra.mapper.ProjectPermissionMapper">
    <resultMap id="userWithRolesMap" type="io.choerodon.iam.infra.dto.UserDTO" autoMapping="true">
        <id property="id" column="id"/>
        <result property="realName" column="real_name"/>
        <result property="loginName" column="login_name"/>
        <result property="enabled" column="is_enabled"/>
        <result property="ldap" column="is_ldap"/>
        <result property="phone" column="phone"/>
        <result property="imageUrl" column="image_url"/>
        <result property="locked" column="is_locked"/>
        <result property="organizationId" column="organization_id"/>
        <result property="tenantName" column="user_org_name"/>
        <result property="organizationCode" column="user_org_code"/>
        <result property="objectVersionNumber" column="user_version_number"/>
        <result property="creationDate" column="creation_date"/>
        <collection property="roles" ofType="org.hzero.iam.domain.entity.Role"
                    autoMapping="true" notNullColumn="role_id">
            <id property="id" column="role_id"/>
            <result property="name" column="role_name"/>
            <result property="code" column="role_code"/>
            <result property="enabled" column="role_is_enabled"/>
            <result property="tenantId" column="role_org_id"/>
        </collection>
    </resultMap>

    <resultMap id="userDTO" type="io.choerodon.iam.infra.dto.UserDTO" autoMapping="true">
        <id property="id" column="id"/>
        <result property="enabled" column="is_enabled"/>
        <result property="locked" column="is_locked"/>
        <result property="ldap" column="is_ldap"/>
        <result property="admin" column="is_admin"/>
        <result property="password" column="hash_password"/>
    </resultMap>


    <select id="selectCountUsersOnProjectLevel" resultType="int">
        select count(1)
        from
        (
        select distinct iut.id
        from
        iam_user iut
        left join iam_member_role imr on iut.id = imr.member_id
        left join fd_project_permission fdu on (imr.id = fdu.MEMBER_ROLE_ID)
        JOIN iam_role ir on ir.id = imr.role_id
        <if test="roleId != null">
            and ir.id = #{roleId}
        </if>
        <where>
            fdu.PROJECT_ID = #{sourceId}
            <if test="roleName != null">
                and ir.name like concat(concat('%',#{roleName}),'%')
            </if>
            <if test="realName != null">
                and iut.real_name LIKE concat(concat('%',#{realName}),'%')
            </if>
            <if test="loginName != null">
                and iut.login_name LIKE concat(concat('%',#{loginName}),'%')
            </if>
            <if test="enabled != null">
                and iut.is_enabled = #{enabled}
            </if>
            <if test="phone != null">
                and iut.phone LIKE concat(concat('%',#{phone}),'%')
            </if>
            <if test="email != null">
                and iut.email LIKE concat(concat('%',#{email}),'%')
            </if>
            <if test="params != null">
                and (
                iut.login_name like concat(concat('%',#{params}),'%') or
                iut.real_name like concat(concat('%',#{params}),'%') OR
                iut.email like concat(concat('%',#{params}),'%') OR
                iut.phone like concat(concat('%',#{params}),'%') OR
                iut.attribute15 LIKE concat(concat('%',#{params}),'%') OR
                iut.attribute14 LIKE concat(concat('%',#{params}),'%')
                )
            </if>
        </where>
        ) t
    </select>

    <select id="selectUserWithRolesOnProjectLevel" resultMap="userWithRolesMap">
        <bind name="lang" value="@io.choerodon.mybatis.helper.LanguageHelper@language()"/>

        select t2.id,t2.real_name,t2.login_name as login_name,t2.is_enabled,t2.is_ldap,t2.phone,
        t2.is_locked,t2.organization_id,t2.email,t2.language,t2.time_zone, t2.phone,t2.image_url,
        t2.object_version_number as user_version_number,
        t2.creation_date as creation_date,
        htt.tenant_name as user_org_name,
        htc.config_value as user_org_code,
        ir2.id as role_id,ir2.code as role_code,
        ir2.name as role_name, ir2.is_enabled as role_is_enabled,ir2.h_tenant_id as role_org_id
        from
        (
        select distinct t1.*
        from
        (
        select iut.*
        from
        iam_user iut
        join iam_member_role imr ON iut.id = imr.member_id
        join fd_project_permission fdu on fdu.MEMBER_ROLE_ID = imr.id
        JOIN iam_role ir2 on ir2.id=imr.role_id
        <if test="roleId != null">
            and ir2.id=#{roleId}
        </if>
        <where>
            fdu.PROJECT_ID = #{sourceId}
            <if test="roleName != null">
                and ir.name like concat(concat('%',#{roleName}),'%')
            </if>
            <if test="realName != null">
                and iut.real_name LIKE concat(concat('%',#{realName}),'%')
            </if>
            <if test="loginName != null">
                and iut.login_name LIKE concat(concat('%',#{loginName}),'%')
            </if>
            <if test="enabled != null">
                and iut.is_enabled = #{enabled}
            </if>
            <if test="phone != null">
                and iut.phone LIKE concat(concat('%',#{phone}),'%')
            </if>
            <if test="email != null">
                and iut.email LIKE concat(concat('%',#{email}),'%')
            </if>
            <if test="params != null">
                and (
                iut.login_name like concat(concat('%',#{params}),'%') or
                iut.real_name like concat(concat('%',#{params}),'%') OR
                iut.email like concat(concat('%',#{params}),'%') OR
                iut.phone like concat(concat('%',#{params}),'%') OR
                iut.attribute15 LIKE concat(concat('%',#{params}),'%') OR
                iut.attribute14 LIKE concat(concat('%',#{params}),'%')
                )
            </if>
        </where>
        ) t1
        order by t1.is_enabled desc, t1.id desc
        <if test="start != null and size != null">
            limit #{start}, #{size}
        </if>
        ) t2
        join iam_member_role imr2 ON t2.id = imr2.member_id
        join fd_project_permission fdu2 on imr2.id = fdu2.MEMBER_ROLE_ID and fdu2.PROJECT_ID = #{sourceId}
        left join iam_role ir2 on ir2.id = imr2.role_id
        left join hpfm_tenant fo on (t2.organization_id = fo.tenant_id)
        JOIN hpfm_tenant_tl htt on htt.tenant_id = fo.tenant_id and htt.lang= #{lang}
        left join hpfm_tenant_config htc ON fo.tenant_id = htc.tenant_id and htc.config_key = 'code'
    </select>


    <select id="getUserListByProjectId" resultMap="userWithRolesMap">
        <bind name="lang" value="@io.choerodon.mybatis.helper.LanguageHelper@language()"/>

        SELECT
	      t2.id,
	      t2.real_name,
	      t2.login_name AS login_name,
	      t2.is_enabled,
	      t2.is_ldap,
	      t2.is_locked,
	      t2.organization_id,
	      t2.email,
	      t2.LANGUAGE,
	      t2.time_zone,
	      t2.phone,
	      t2.image_url,
	      t2.object_version_number AS user_version_number,
          htt.tenant_name AS user_org_name,
	      htc.config_value AS user_org_code,
	      ir2.id AS role_id,
	      ir2.CODE AS role_code,
	      ir2.NAME AS role_name,
	      ir2.is_enabled AS role_is_enabled,
	      ir2.h_tenant_id AS role_org_id
        FROM
        	(
        SELECT DISTINCT
        	t1.*
        FROM
        	(
        select iut.*
        from
        iam_user iut
	      JOIN iam_member_role imr ON iut.id = imr.member_id
	      JOIN fd_project_permission fdu ON fdu.MEMBER_ROLE_ID = imr.id
	      JOIN iam_role ir2 ON ir2.id = imr.role_id
	      LEFT JOIN iam_role ir ON ir.id = imr.role_id
         WHERE
	     fdu.PROJECT_ID = #{projectId,jdbcType=BIGINT}

	     ) t1
       ORDER BY
	   t1.is_enabled DESC,
	   t1.id DESC
	   ) t2
	   JOIN iam_member_role imr2 ON t2.id = imr2.member_id
	   JOIN fd_project_permission fdu2 ON imr2.id = fdu2.MEMBER_ROLE_ID
	   AND fdu2.PROJECT_ID = #{projectId,jdbcType=BIGINT}
	   LEFT JOIN iam_role ir2 ON ir2.id = imr2.role_id
	   LEFT JOIN hpfm_tenant fo ON ( t2.organization_id = fo.tenant_id )
       LEFT JOIN hpfm_tenant_tl htt on htt.tenant_id = fo.tenant_id and htt.lang= #{lang}
       LEFT JOIN hpfm_tenant_config htc ON fo.tenant_id = htc.tenant_id
       AND htc.config_key = 'code'
    </select>


    <select id="listUserWithRolesOnProjectLevelByIds" resultMap="userWithRolesMap">
        <bind name="lang" value="@io.choerodon.mybatis.helper.LanguageHelper@language()"/>

        select t2.id,t2.real_name,t2.login_name as login_name,t2.is_enabled, t2.image_url,
        t2.is_locked,t2.organization_id,t2.email,t2.language,t2.time_zone, t2.phone,t2.is_ldap,
        t2.object_version_number as user_version_number,
        htt.tenant_name as user_org_name,htc.config_value as user_org_code, ir2.id as role_id,ir2.code as role_code,
        ir2.name as role_name, ir2.is_enabled as role_is_enabled,ir2.h_tenant_id as role_org_id
        from
        (
        select distinct t1.*
        from
        (
        select iut.*
        from
        (
        select iu.*
        from iam_user iu
        <if test="userIds != null and userIds.size() != 0">
            WHERE iu.ID IN
            <foreach collection="userIds" open="(" close=")" separator="," item="userId">
                #{userId,jdbcType=BIGINT}
            </foreach>
        </if>
        ) iut
        left join iam_member_role imr ON iut.id = imr.member_id
        left join fd_project_permission fdu on imr.id = fdu.MEMBER_ROLE_ID
        JOIN iam_role ir2 on ir2.id=imr.role_id
        <where>
            fdu.PROJECT_ID = #{projectId,jdbcType=BIGINT}
        </where>
        ) t1
        ) t2
        left join

        (select imr2.role_id, imr2.member_id
        from iam_member_role imr2
        inner join fd_project_permission fpu2 on (imr2.id = fpu2.MEMBER_ROLE_ID and fpu2.PROJECT_ID = #{projectId,jdbcType=BIGINT})
        ) mr ON t2.id = mr.member_id

        left join iam_role ir2 on ir2.id = mr.role_id
        left join hpfm_tenant fo on (t2.organization_id = fo.tenant_id)
        JOIN hpfm_tenant_tl htt on htt.tenant_id = fo.tenant_id and htt.lang= #{lang}
        left join hpfm_tenant_config htc ON fo.tenant_id = htc.tenant_id and htc.config_key = 'code'
    </select>


    <select id="listProjectUsersByProjectIdAndRoleLabel" resultMap="userDTO">
        SELECT iu.*
        FROM iam_member_role imr
                 INNER join fd_project_permission fpu ON fpu.member_role_id = imr.id
                 INNER JOIN iam_user iu ON iu.id = imr.member_id
                 INNER JOIN iam_role ir ON imr.role_id = ir.id
                 INNER JOIN hiam_label_rel hlr ON hlr.data_id = ir.id AND hlr.data_type = 'ROLE'
                 INNER JOIN iam_label il ON il.id = hlr.label_id
        WHERE il.name = #{roleLabel}
          and fpu.project_id = #{projectId}
        <if test="param != null">
            AND (iu.login_name LIKE concat(concat('%', #{param}),'%') OR
                 iu.real_name LIKE concat(concat('%',#{param}),'%') OR
                 iu.email LIKE concat(concat('%',#{param}),'%') OR
                 iu.attribute15 LIKE concat(concat('%',#{param}),'%') OR
                 iu.attribute14 LIKE concat(concat('%',#{param}),'%')
                )
        </if>
    </select>

    <resultMap id="projectWithUser" type="io.choerodon.iam.api.vo.ProjectWithUserVO">
        <id column="project_id" property="projectId"/>
        <collection property="userIds" ofType="java.lang.Long">
            <id column="id"/>
        </collection>
    </resultMap>

    <select id="listUsersByRoleLabelAndProjectIds" resultMap="projectWithUser">
        select iu.id, fpu.project_id
        from iam_member_role imr
        join fd_project_permission fpu on fpu.member_role_id = imr.id
        join iam_user iu on iu.id = imr.member_id
        join iam_role ir on imr.role_id = ir.id
        join hiam_label_rel hlr ON hlr.data_id = ir.id and hlr.data_type = 'ROLE'
        join iam_label il on il.id = hlr.label_id
        where il.name = #{roleLabel}
        and fpu.project_id in
        <foreach collection="projectIds" open="(" close=")" separator="," item="projectId">
            #{projectId}
        </foreach>
    </select>


    <!--一个用户对应多个角色标签，使用GROUP BY去重-->
    <select id="listUsersByName" resultType="io.choerodon.iam.infra.dto.UserDTO">
        SELECT iu.*
        FROM fd_project_permission fpu
        INNER JOIN iam_member_role imr ON imr.id = fpu.MEMBER_ROLE_ID
        INNER JOIN iam_user iu ON iu.id = imr.member_id
        INNER JOIN iam_role ir ON imr.role_id = ir.id
        INNER JOIN hiam_label_rel hlr ON hlr.data_id = ir.id
        INNER JOIN iam_label il ON il.id = hlr.label_id
        WHERE fpu.PROJECT_ID = #{projectId}
        AND hlr.data_type='ROLE'
        AND (il.name = 'PROJECT_ADMIN' OR il.name = 'GITLAB_OWNER' OR il.name = 'GITLAB_DEVELOPER')
        AND il.type='ROLE'
        <if test="param != null">
            AND (iu.login_name LIKE concat(concat('%', #{param}),'%') OR
                 iu.real_name LIKE concat(concat('%',#{param}),'%') OR
                 iu.attribute15 LIKE concat(concat('%',#{param}),'%') OR
                 iu.attribute14 LIKE concat(concat('%',#{param}),'%')
                )
        </if>
        GROUP BY iu.id
    </select>


    <select id="listProjectOwnerById" resultType="io.choerodon.iam.infra.dto.UserDTO">
        SELECT iu.id,
               iu.email,
               iu.real_name,
               iu.phone,
               iu.login_name
        FROM iam_user iu
                 INNER JOIN iam_member_role imr ON iu.id = imr.member_id
                 INNER JOIN fd_project_permission fpu ON imr.id = fpu.MEMBER_ROLE_ID
                 INNER JOIN iam_role ir ON ir.id = imr.role_id
        WHERE ir.code = 'role/project/default/project-owner'
          AND fpu.PROJECT_ID = #{projectId}
    </select>

    <select id="listUsersByNameWithLimit" resultType="io.choerodon.iam.infra.dto.UserDTO">
        SELECT iu.*
        FROM fd_project_permission fpu
        INNER JOIN iam_member_role imr ON imr.id = fpu.MEMBER_ROLE_ID
        INNER JOIN iam_user iu ON iu.id = imr.member_id
        WHERE fpu.PROJECT_ID = #{projectId}
        <if test="param != null">
            AND (iu.login_name LIKE concat(concat('%', #{param}),'%') OR
                 iu.real_name LIKE concat(concat('%',#{param}),'%') OR
                 iu.attribute15 LIKE concat(concat('%',#{param}),'%') OR
                 iu.attribute14 LIKE concat(concat('%',#{param}),'%')
                )
        </if>
        GROUP BY iu.id
        limit 20
    </select>

    <select id="listProjectRoleIds" resultType="java.lang.Long">
        SELECT imr.ROLE_ID
        FROM fd_project_permission fpu
                 INNER JOIN iam_member_role imr ON imr.id = fpu.MEMBER_ROLE_ID
        WHERE fpu.PROJECT_ID = #{projectId,jdbcType=BIGINT}
          AND imr.MEMBER_ID = #{userId,jdbcType=BIGINT} and imr.member_type='user'
    </select>

    <select id="listRolesByProjectIdAndUserIds" resultType="io.choerodon.iam.api.vo.UserVO">
        SELECT imr.member_id as id, GROUP_CONCAT(ir.name) as role_names,ANY_VALUE(iu.login_name) as login_name,ANY_VALUE(iu.real_name) as real_name,ANY_VALUE(iu.image_url) as image_url
        FROM fd_project_permission fpu
                     INNER JOIN iam_member_role imr ON imr.id = fpu.MEMBER_ROLE_ID
                     INNER JOIN iam_role ir ON imr.role_id = ir.id
                     INNER JOIN iam_user iu ON iu.id=imr.member_id
                WHERE fpu.PROJECT_ID = #{projectId,jdbcType=BIGINT}
                  and imr.member_type='user'
                  AND imr.MEMBER_ID IN
        <foreach collection="userIds" item="userId" separator="," open="(" close=")">
            #{userId}
        </foreach>
        GROUP BY imr.member_id
    </select>


    <select id="countProjectRoleUser" resultType="io.choerodon.iam.api.vo.agile.RoleUserCountVO">
        SELECT imr.ROLE_ID, COUNT(*) AS USER_NUMBER
        FROM fd_project_permission fpu
                 INNER JOIN iam_member_role imr ON imr.id = fpu.MEMBER_ROLE_ID
        WHERE fpu.PROJECT_ID = #{projectId}
        GROUP BY imr.ROLE_ID
    </select>


    <select id="selectUsersByOptions" resultType="io.choerodon.iam.infra.dto.UserDTO">
        SELECT iu.id, iu.login_name, iu.email, iu.organization_id,
        iu.real_name, iu.phone, iu.INTERNATIONAL_TEL_CODE,
        iu.image_url, iu.profile_photo, iu.time_zone,
        iu.last_password_updated_at, iu.last_login_at, iu.is_enabled AS enabled,
        iu.is_locked AS locked, iu.is_ldap AS ldap, iu.is_admin AS admin, iu.locked_until_at,
        iu.password_attempt, iu.object_version_number, iu.created_by,
        iu.creation_date, iu.last_updated_by, iu.last_update_date,
        iu.user_type
        FROM iam_user iu
        INNER JOIN iam_member_role imr ON iu.id = imr.member_id
        LEFT JOIN fd_project_permission fpu ON imr.id = fpu.MEMBER_ROLE_ID
        <where>
            fpu.PROJECT_ID = #{projectId}
            <if test="userId != null">
                AND iu.id = #{userId}
            </if>
            <if test="email != null">
                AND iu.email LIKE concat(concat('%',#{email}),'%')
            </if>
            <if test="param != null">
                AND (
                iu.login_name LIKE concat(concat('%',#{param}),'%') OR
                iu.real_name LIKE concat(concat('%',#{param}),'%') OR
                iu.attribute15 LIKE concat(concat('%',#{param}),'%') OR
                iu.attribute14 LIKE concat(concat('%',#{param}),'%')
                )
            </if>
        </where>
        group by iu.id
    </select>


    <select id="selectUsersByOptionsOrderByRoles" resultType="io.choerodon.iam.infra.dto.UserDTO">
        select
            iu1.id,
            iu1.login_name,
            iu1.email,
            iu1.organization_id,
            iu1.real_name,
            iu1.phone,
            iu1.INTERNATIONAL_TEL_CODE,
            iu1.image_url,
            iu1.profile_photo,
            iu1.time_zone,
            iu1.last_password_updated_at,
            iu1.last_login_at,
            iu1.is_enabled AS enabled,
            iu1.is_locked AS locked,
            iu1.is_ldap AS ldap,
            iu1.is_admin AS admin,
            iu1.locked_until_at,
            iu1.password_attempt,
            iu1.object_version_number,
            iu1.created_by,
            iu1.creation_date,
            iu1.last_updated_by,
            iu1.last_update_date,
            iu1.user_type,
            t1.weight
        from (
            select
            t.member_id,
            max(t.weight) as weight
            from
            (
                select
                imr.member_id,
                case
                    when imr.role_id = #{projectAdminId}
                    then 30
                    when imr.role_id = #{projectMemberId}
                    then 20
                    else 10
                end as weight
                from iam_member_role imr
                join fd_project_permission fpu on imr.id = fpu.member_role_id
                left join iam_user iu on imr.member_id = iu.id
                where fpu.project_id = #{projectId}
                    <if test="userId != null">
                        AND iu.id = #{userId}
                    </if>
                    <if test="email != null">
                        AND iu.email LIKE concat(concat('%',#{email}),'%')
                    </if>
                    <if test="notSelectUserIds != null and notSelectUserIds.size() != 0">
                        AND iu.id NOT IN
                        <foreach collection="notSelectUserIds" item="id" separator="," open="(" close=")">
                            #{id,jdbcType=BIGINT}
                        </foreach>
                    </if>
                    <if test="param != null">
                        AND (
                        iu.login_name LIKE concat(concat('%',#{param}),'%') OR
                        iu.real_name LIKE concat(concat('%',#{param}),'%') OR
                        iu.attribute15 LIKE concat(concat('%',#{param}),'%') OR
                        iu.attribute14 LIKE concat(concat('%',#{param}),'%')
                        )
                    </if>
            ) t
                group by t.member_id
        ) t1
        join iam_user iu1 on t1.member_id = iu1.id
        order by t1.weight desc, iu1.id asc
    </select>


    <select id="listProjectUsersByRoleIdAndOptions" resultType="io.choerodon.iam.infra.dto.UserDTO">
        SELECT iu.*
        FROM fd_project_permission fpu
        INNER join iam_member_role imr ON imr.id = fpu.MEMBER_ROLE_ID
        INNER JOIN iam_user iu ON imr.member_id = iu.id
        <where>
            fpu.PROJECT_ID = #{projectId}
            <if test="roleId != null">
                AND imr.ROLE_ID = #{roleId}
            </if>
            <if test="roleAssignmentSearchDTO != null">
                <if test="roleAssignmentSearchDTO.loginName != null">
                    AND iu.login_name LIKE concat(concat('%',#{roleAssignmentSearchDTO.loginName}),'%')
                </if>
                <if test="roleAssignmentSearchDTO.realName != null">
                    AND iu.real_name LIKE concat(concat('%',#{roleAssignmentSearchDTO.realName}),'%')
                </if>
                <if test="roleAssignmentSearchDTO.enabled != null">
                    AND iu.is_enabled = #{roleAssignmentSearchDTO.enabled}
                </if>
                <if test="roleAssignmentSearchDTO.roleIds != null and roleAssignmentSearchDTO.roleIds.size() > 0">
                    AND imr.role_id IN
                    <foreach collection="roleAssignmentSearchDTO.roleIds" item="item" separator="," open="(" close=")">
                        #{item}
                    </foreach>
                </if>
            </if>
            <if test="param != null">
                AND (
                iu.login_name LIKE concat(concat('%',#{param}),'%') OR
                iu.real_name LIKE concat(concat('%',#{param}),'%') OR
                iu.attribute15 LIKE concat(concat('%',#{param}),'%') OR
                iu.attribute14 LIKE concat(concat('%',#{param}),'%')
                )
            </if>
        </where>
    </select>

    <select id="selectAgileUsersByProjectId" resultMap="userDTO">
        select
        iu1.*,
        case
            when iu1.is_enabled = 0
            <!--如果用户停用，将用户权重设置为最小-->
            then t1.weight - 100
            else t1.weight
        end as weight
        from (
            select
            t.member_id,
            max(t.weight) as weight
            from (
                select
                imr.member_id,
                case
                    when imr.role_id in
                        <foreach collection="adminRoleIds" item="adminRole" separator="," open="(" close=")">
                            #{adminRole}
                        </foreach>
                    then 10
                    else 0
                end as weight
                from iam_member_role imr
                join fd_project_permission fpu on imr.id = fpu.member_role_id
                where fpu.project_id = #{projectId}
                <if test="agileUserVO != null">
                    <if test="agileUserVO.userIds != null and agileUserVO.userIds.size > 0">
                        union
                        select
                        iu.id,
                        0 as weight
                        from iam_user iu
                        where iu.id in
                        <foreach item="id" index="index" collection="agileUserVO.userIds"
                                 open="(" separator="," close=")">
                            #{id}
                        </foreach>
                    </if>
                </if>
            ) t
            group by t.member_id
        ) t1
        join iam_user iu1 on t1.member_id = iu1.id
        where 1=1
        <if test="agileUserVO != null">
            <if test="agileUserVO.param != null">
                AND (
                iu1.login_name LIKE concat(concat('%',#{agileUserVO.param}),'%') OR
                iu1.real_name LIKE concat(concat('%',#{agileUserVO.param}),'%')
                )
            </if>
            <if test="agileUserVO.ignoredUserIds != null and agileUserVO.ignoredUserIds.size > 0">
                AND iu1.id NOT IN
                <foreach collection="agileUserVO.ignoredUserIds" item="ignoredUserId" open="(" separator="," close=")">
                    #{ignoredUserId}
                </foreach>
            </if>
        </if>
        order by weight desc, iu1.id asc
    </select>

    <select id="selectAgileUsersByProjectIds" resultMap="userDTO">
        select
        iu1.*,
        case
        when iu1.is_enabled = 0
        <!--如果用户停用，将用户权重设置为最小-->
        then t1.weight - 100
        else t1.weight
        end as weight
        from (
        select
        t.member_id,
        max(t.weight) as weight
        from (
        select
        imr.member_id,
        case
        when imr.role_id in
        <foreach collection="adminRoleIds" item="adminRole" separator="," open="(" close=")">
            #{adminRole}
        </foreach>
        then 10
        else 0
        end as weight
        from iam_member_role imr
        join fd_project_permission fpu on imr.id = fpu.member_role_id
        where fpu.project_id in
        <foreach item="projectId" index="index" collection="projectIds" open="(" separator="," close=")">
            #{projectId}
        </foreach>
        <if test="agileUserVO != null">
            <if test="agileUserVO.userIds != null and agileUserVO.userIds.size > 0">
                union
                select
                iu.id,
                0 as weight
                from iam_user iu
                where iu.id in
                <foreach item="id" index="index" collection="agileUserVO.userIds"
                         open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
        </if>
        ) t
        group by t.member_id
        ) t1
        join iam_user iu1 on t1.member_id = iu1.id
        where 1=1
        <if test="agileUserVO != null">
            <if test="agileUserVO.param != null">
                AND (
                iu1.login_name LIKE concat(concat('%',#{agileUserVO.param}),'%') OR
                iu1.real_name LIKE concat(concat('%',#{agileUserVO.param}),'%') OR
                iu1.email LIKE concat(concat('%',#{agileUserVO.param}),'%') OR
                iu1.attribute15 LIKE concat(concat('%',#{agileUserVO.param}),'%') OR
                iu1.attribute14 LIKE concat(concat('%',#{agileUserVO.param}),'%')
                )
            </if>
            <if test="agileUserVO.ignoredUserIds != null  and agileUserVO.ignoredUserIds.size > 0">
                AND iu1.id NOT IN
                <foreach collection="agileUserVO.ignoredUserIds" item="ignoredUserId" open="(" separator="," close=")">
                    #{ignoredUserId}
                </foreach>
            </if>
        </if>
        order by weight desc, iu1.id asc
    </select>


    <select id="listRolesByProjectIdAndUserId" resultType="org.hzero.iam.api.dto.RoleDTO">
        SELECT ir.*
        FROM fd_project_permission fpu
                 INNER join iam_member_role imr ON imr.id = fpu.MEMBER_ROLE_ID
                 INNER JOIN iam_role ir ON ir.id = imr.ROLE_ID
        WHERE fpu.PROJECT_ID = #{projectId}
          and imr.MEMBER_ID = #{userId} and imr.member_type='user'
    </select>

    <select id="listProjectUser" resultType="io.choerodon.iam.infra.dto.UserDTO">
        SELECT *
        FROM (
        SELECT iu.id, iu.email, iu.organization_id, iu.real_name, iu.phone, iu.image_url, iu.is_enabled, iu.is_ldap,
        iu.is_admin,iu.login_name
        FROM fd_project_permission fpu
        JOIN iam_member_role imr ON imr.id = fpu.MEMBER_ROLE_ID
        JOIN iam_user iu ON iu.id = imr.member_id
        WHERE fpu.PROJECT_ID = #{projectId}
        GROUP BY iu.id
        ) iut
        <where>
            <if test="roleAssignmentSearchDTO != null">
                <if test="roleAssignmentSearchDTO.loginName != null">
                    AND iut.login_name LIKE concat(concat('%',#{roleAssignmentSearchDTO.loginName}),'%')
                </if>
                <if test="roleAssignmentSearchDTO.realName != null">
                    AND iut.real_name LIKE concat(concat('%',#{roleAssignmentSearchDTO.realName}),'%')
                </if>
                <if test="roleAssignmentSearchDTO.roleName != null">
                    AND ir.name LIKE concat(concat('%',#{roleAssignmentSearchDTO.roleName}),'%')
                </if>
                <if test="param != null">
                    and (
                    iut.login_name LIKE concat(concat('%',#{param}),'%') OR
                    iut.real_name LIKE concat(concat('%',#{param}),'%') OR
                    ir.name LIKE concat(concat('%',#{param}),'%')
                    )
                </if>
            </if>
        </where>
    </select>

    <resultMap id="projectUserMap" type="io.choerodon.iam.api.vo.ProjectUserVO">
        <id column="MEMBER_ID" property="memberId"/>
        <association property="role" javaType="org.hzero.iam.domain.entity.Role">
            <id column="id" property="id"/>
            <result property="name" column="name"/>
            <result property="code" column="code"/>
            <result property="description" column="description"/>
            <result property="isEnabled" column="is_enabled"/>
            <result property="isBuiltIn" column="is_built_in"/>
        </association>
    </resultMap>

    <select id="listByProjectIdAndUserIds" resultMap="projectUserMap">
        SELECT imr.MEMBER_ID, ir.*
        FROM fd_project_permission fpu
        INNER join iam_member_role imr ON imr.id = fpu.MEMBER_ROLE_ID
        INNER JOIN iam_role ir ON ir.id = imr.ROLE_ID
        WHERE fpu.PROJECT_ID = #{projectId}
        AND imr.MEMBER_ID IN
        <foreach collection="userIds" item="userId" open="(" close=")" separator="," index="i">
            #{userId}
        </foreach>
        and imr.member_type='user'
    </select>

    <select id="listMemberRoleByProjectIdAndUserId" resultType="org.hzero.iam.domain.entity.MemberRole">
        SELECT imr.*
        FROM iam_member_role imr
                 JOIN iam_role ir ON ir.id = imr.role_id
                 JOIN fd_project_permission fpu ON fpu.MEMBER_ROLE_ID = imr.id
            AND fpu.PROJECT_ID = #{projectId}
        WHERE imr.member_id = #{userId} and imr.member_type='user'
        <if test="roleIds!=null">
            AND imr.role_id IN
            <foreach collection="roleIds" item="roleId" open="(" close=")" separator="," index="i">
                #{roleId}
            </foreach>
        </if>
    </select>

    <select id="listMemberRoleByProjectIdAndClientId" resultType="org.hzero.iam.domain.entity.MemberRole">
        SELECT imr.*
        FROM iam_member_role imr
        JOIN iam_role ir ON ir.id = imr.role_id
        JOIN fd_project_permission fpu ON fpu.MEMBER_ROLE_ID = imr.id
        AND fpu.PROJECT_ID = #{projectId}
        WHERE imr.member_id = #{clientId} and imr.member_type='client'
        <if test="roleIds!=null">
            AND imr.role_id IN
            <foreach collection="roleIds" item="roleId" open="(" close=")" separator="," index="i">
                #{roleId}
            </foreach>
        </if>
    </select>

    <select id="selectByRoleIdAndUserId" resultType="org.hzero.iam.domain.entity.MemberRole">
        SELECT imr.*
        FROM iam_member_role imr
                 JOIN iam_role ir ON ir.id = imr.role_id
                 JOIN fd_project_permission fpu ON fpu.MEMBER_ROLE_ID = imr.id
            AND fpu.PROJECT_ID = #{projectId}
        WHERE imr.member_id = #{userId}
          and imr.role_id = #{roleId}
    </select>

    <select id="listMemberRoleWithOutProjectId" resultType="org.hzero.iam.domain.entity.MemberRole">
        SELECT imr.*
        FROM iam_member_role imr
                 JOIN iam_role ir ON ir.id = imr.role_id
                 JOIN fd_project_permission fpu ON fpu.MEMBER_ROLE_ID = imr.id
            AND fpu.PROJECT_ID NOT IN (#{projectId})
        WHERE imr.member_id = #{userId}
          AND imr.source_id = #{tenantId}
          AND imr.source_type = 'organization'
        <if test="roleIds!=null">
            AND imr.role_id IN
            <foreach collection="roleIds" item="roleId" open="(" close=")" separator="," index="i">
                #{roleId}
            </foreach>
        </if>
    </select>

    <delete id="deleteByIds">
        DELETE fpu.*
        FROM
        fd_project_permission fpu
        WHERE
        fpu.PROJECT_ID = #{projectId}
        AND fpu.MEMBER_ROLE_ID IN
        <foreach collection="memberRoleIds" open="(" separator="," close=")" item="memberRoleId">
            #{memberRoleId}
        </foreach>
    </delete>

    <delete id="deleteByClientId">
        DELETE fpu
        FROM
            fd_project_permission fpu
        WHERE
            fpu.PROJECT_ID = #{projectId}
            AND fpu.MEMBER_ROLE_ID IN (
                SELECT
                    imr.id
                FROM
                    iam_member_role imr
                WHERE
                    imr.member_id = #{clientId}
                    AND imr.member_type = 'client'
            )
    </delete>

    <select id="listOwnedProject" resultType="io.choerodon.iam.infra.dto.ProjectDTO">
        SELECT fp.*
        FROM iam_member_role imr
        INNER JOIN iam_role ir ON (ir.id = imr.role_id AND ir.is_enabled = true)
        INNER JOIN fd_project_permission fpu ON fpu.MEMBER_ROLE_ID = imr.id
        INNER JOIN fd_project fp ON fp.ID = fpu.PROJECT_ID
        WHERE fp.ORGANIZATION_ID = #{organizationId} AND imr.member_id = #{userId} AND imr.member_type = 'user'
    </select>
    <select id="queryProjectUserPermission" resultType="java.lang.Long">
        select irp.permission_id
        from fd_project_permission fpp
                 inner join iam_member_role imr on (imr.id = fpp.MEMBER_ROLE_ID)
                 inner join iam_role ir on (ir.id = imr.role_id and ir.is_enabled = true)
                 inner join iam_role_permission irp on (irp.role_id = ir.id and type = 'PS') and (irp.h_create_flag = 'Y' OR irp.h_inherit_flag = 'Y')
        where imr.member_type = 'user' and imr.member_id = #{userId}
          and imr.source_id = #{organizationId} and imr.source_type = 'organization'
          and fpp.PROJECT_ID = #{projectId} and irp.permission_id in
        <foreach collection="psIds" item="psId" open="(" close=")" separator="," index="i">
            #{psId}
        </foreach>
    </select>


</mapper>
