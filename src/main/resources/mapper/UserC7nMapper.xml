<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.choerodon.iam.infra.mapper.UserC7nMapper">
    <resultMap id="userDTO" type="org.hzero.iam.domain.entity.User" autoMapping="true">
        <id property="id" column="id"/>
        <result property="enabled" column="is_enabled"/>
        <result property="locked" column="is_locked"/>
        <result property="ldap" column="is_ldap"/>
        <result property="admin" column="is_admin"/>
        <result property="password" column="hash_password"/>
    </resultMap>

    <resultMap id="projectUserWithRolesMap" type="org.hzero.iam.domain.entity.User">
        <id property="id" column="id"/>
        <result property="realName" column="real_name"/>
        <result property="loginName" column="login_name"/>
        <result property="enabled" column="is_enabled"/>
        <result property="locked" column="is_locked"/>
        <result property="email" column="email"/>
        <result property="ldap" column="is_ldap"/>
        <result property="imageUrl" column="image_url"/>
        <result property="creationDate" column="creation_date"/>
        <collection property="roles" ofType="org.hzero.iam.domain.entity.Role"
                    autoMapping="true" notNullColumn="role_id">
            <id property="id" column="role_id"/>
            <result property="name" column="role_name"/>
            <result property="code" column="role_code"/>
        </collection>
    </resultMap>

    <resultMap id="userWithRolesMap" type="io.choerodon.iam.infra.dto.UserDTO" autoMapping="true">
        <id property="id" column="id"/>
        <result property="realName" column="real_name"/>
        <result property="loginName" column="login_name"/>
        <result property="enabled" column="is_enabled"/>
        <result property="ldap" column="is_ldap"/>
        <result property="imageUrl" column="image_url"/>
        <result property="locked" column="is_locked"/>
        <result property="organizationId" column="organization_id"/>
        <result property="tenantName" column="user_org_name"/>
        <result property="organizationCode" column="user_org_code"/>
        <result property="objectVersionNumber" column="user_version_number"/>
        <collection property="roles" ofType="org.hzero.iam.domain.entity.Role"
                    autoMapping="true" notNullColumn="role_id">
            <id property="id" column="role_id"/>
            <result property="name" column="role_name"/>
            <result property="code" column="role_code"/>
            <result property="enabled" column="role_is_enabled"/>
            <result property="tenantId" column="role_org_id"/>
        </collection>
    </resultMap>

    <resultMap id="RoleMap" type="io.choerodon.iam.infra.dto.RoleC7nDTO">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="code" property="code"/>
        <result column="h_parent_role_id" property="parentRoleId"/>
        <result column="h_inherit_role_id" property="inheritRoleId"/>
        <collection property="labels" ofType="org.hzero.iam.domain.entity.Label">
            <id column="label_name" property="name"/>
            <result column="label_type" property="type"/>
            <result column="label_LEVEL" property="fdLevel"/>
        </collection>
    </resultMap>

    <resultMap id="RoleVOMap" type="io.choerodon.iam.api.vo.RoleVO">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="code" property="code"/>
        <result column="h_parent_role_id" property="parentRoleId"/>
        <result column="h_inherit_role_id" property="inheritRoleId"/>
        <result column="user_id" property="userId"/>
    </resultMap>

    <resultMap id="simplifiedUserDTO" type="io.choerodon.iam.api.vo.SimplifiedUserVO" autoMapping="true">
        <id property="id" column="id"/>
        <result property="loginName" column="login_name"/>
        <result property="realName" column="real_name"/>
        <result property="imageUrl" column="image_url"/>
        <result property="email" column="email"/>
    </resultMap>
    <resultMap id="UserDTOMap" type="io.choerodon.iam.infra.dto.UserDTO" autoMapping="true">
          <result property="enabled" column="is_enabled"/>
            <result property="locked" column="is_locked"/>
            <result property="email" column="email"/>
            <result property="ldap" column="is_ldap"/>
            <result property="organizationName" column="tenant_name"/>
            <result property="organizationCode" column="tenant_num"/>
    </resultMap>

    <resultMap id="userProjectLabels" type="io.choerodon.iam.api.vo.UserProjectLabelVO">
        <result column="PROJECT_ID" property="projectId"/>
        <result column="member_id" property="userId"/>
        <collection property="roleLabels" ofType="java.lang.String">
            <result column="label_name"/>
        </collection>
    </resultMap>

    <select id="listUsersByIds" resultType="org.hzero.iam.domain.entity.User">
        SELECT *,is_ldap as ldap,is_enabled as enabled, is_admin as admin
        FROM iam_user
        WHERE id IN
        <foreach item="id" index="index" collection="ids"
                 open="(" separator="," close=")">
            #{id}
        </foreach>
        <if test="onlyEnabled == true">
            AND is_enabled = 1
        </if>
    </select>

    <select id="listMarketAuditor" resultType="org.hzero.iam.domain.entity.User">
        SELECT
            iu.*
        FROM
            iam_user iu
            JOIN iam_role ir ON ir.`code` = 'role/site/default/auditor'
                                AND ir.fd_level = 'site'
            JOIN iam_member_role imr ON imr.member_id = iu.id
                                        AND imr.role_id = ir.id
    </select>


    <select id="listUsersByEmails" resultMap="userDTO">
        SELECT * FROM iam_user
        WHERE email IN
        <foreach item="email" index="index" collection="emails"
                 open="(" separator="," close=")">
            #{email}
        </foreach>
        AND is_enabled = 1
    </select>

    <select id="listUsersByLoginNames" resultMap="userDTO">
        SELECT * FROM iam_user
        WHERE login_name IN
        <foreach item="loginName" index="index" collection="loginNames"
                 open="(" separator="," close=")">
            #{loginName}
        </foreach>
        <if test="onlyEnabled == true">
            AND is_enabled = 1
        </if>
    </select>

    <select id="listUsersByRealNames" resultMap="userDTO">
        SELECT * FROM iam_user
        WHERE 1=1
        <if test="onlyEnabled == true">
            AND is_enabled = 1
        </if>
        and
        <foreach item="realName" index="index" collection="realNames"
                 open="(" separator=" or " close=")">
            real_name like concat(concat('%',#{realName}),'%')
        </foreach>
    </select>

    <select id="newUsersByDate" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM iam_user
        WHERE creation_date BETWEEN #{begin}
                  AND #{end}
    </select>

    <select id="countPreviousNumberByOrgIdAndDate" resultType="java.lang.Long">
        select count(1)
        from iam_user iu
        where iu.is_enabled = true
        <if test="organizationId">
            AND iu.organization_id = #{organizationId}
        </if>
        <if test="startTime">
            AND iu.creation_date <![CDATA[<]]> CONCAT('','${startTime}',' 00:00:00')
        </if>
    </select>

    <select id="selectByOrgIdAndDate" resultType="org.hzero.iam.domain.entity.User">
        select *
        from iam_user iu
        where iu.is_enabled = true
        <if test="organizationId">
            AND iu.organization_id = #{organizationId}
        </if>
        <if test="startTime">
            AND iu.creation_date >= CONCAT('','${startTime}',' 00:00:00')
        </if>
        <if test="endTime">
            AND iu.creation_date <![CDATA[<=]]> CONCAT('','${endTime}',' 23:59:59')
        </if>
    </select>


    <select id="selectUsersByLevelAndOptions" resultMap="userDTO">
        SELECT iam_user.*
        FROM iam_user
        JOIN
        (
        SELECT
        DISTINCT member_id
        FROM
        iam_member_role
        WHERE
        source_id = #{sourceId}
        AND source_type = #{sourceType}
        AND member_type = 'user'
        ) t
        ON iam_user.id = t.member_id
        WHERE 1=1
        <if test="userId != null">
            AND iam_user.id = #{userId}
        </if>
        <if test="email != null">
            AND iam_user.email LIKE concat(concat('%',#{email}),'%')
        </if>
        <if test="notSelectUserIds != null and notSelectUserIds.size() != 0">
            AND iam_user.id NOT IN
            <foreach collection="notSelectUserIds" item="id" separator="," open="(" close=")">
                #{id,jdbcType=BIGINT}
            </foreach>
        </if>
        <if test="param != null">
            AND (
            iam_user.login_name LIKE concat(concat('%',#{param}),'%') OR
            iam_user.real_name LIKE concat(concat('%',#{param}),'%')
            )
        </if>
    </select>

    <select id="selectAdminUserPage" resultMap="userDTO">
        select iut.id,iut.login_name,iut.real_name,
        iut.is_enabled,iut.is_locked,iut.is_ldap,iut.is_admin,iut.object_version_number
        from
        iam_user iut
        where iut.is_admin = 1
        <if test="loginName!= null">
            AND iut.login_name LIKE concat(concat('%', #{loginName}), '%')
        </if>
        <if test="realName != null">
            AND iut.real_name LIKE concat(concat('%', #{realName}), '%')
        </if>
        <if test="params != null">
            AND (
            iut.login_name LIKE concat(concat('%',#{params}),'%') OR
            iut.real_name LIKE concat(concat('%',#{params}),'%') OR
            iut.attribute15 LIKE concat(concat('%',#{params}),'%') OR
            iut.attribute14 LIKE concat(concat('%',#{params}),'%')
            )
        </if>
    </select>

    <select id="selectUserByRoleCode" resultType="java.lang.Long">
        SELECT imr.member_id
        FROM iam_member_role imr
                 INNER JOIN iam_role ir ON ir.`code` = #{roleCode}
            AND imr.role_id = ir.id
        WHERE imr.member_type = 'user'

    </select>


    <select id="selectCountUsersOnSiteLevel" resultType="int">
        select count(1)
        from
        (
        select distinct iu.id
        from
        iam_user iut
        <if test="orgName != null">
            left join hpfm_tenant fo on fo.tenant_id = iut.organization_id
        </if>
        <if test="roleName != null">
            left join iam_member_role imr on (imr.member_id = iut.id and imr.member_type = 'user')
            left join iam_role ir on ir.id = imr.role_id
        </if>
        <where>
            <if test="orgName != null">
                and fo.tenant_name like concat(concat('%',#{orgName}),'%')
            </if>
            <if test="roleName != null">
                and imr.source_id = #{sourceId}
                and imr.source_type = #{sourceType}
                and ir.name like concat(concat('%',#{roleName}),'%')
            </if>
            <if test="realName != null">
                and iut.real_name like concat(concat('%',#{realName}),'%')
            </if>
            <if test="loginName != null">
                and iut.login_name like concat(concat('%',#{loginName}),'%')
            </if>
            <if test="enabled != null">
                and iut.is_enabled = #{enabled}
            </if>
            <if test="locked != null">
                and iut.is_locked = #{locked}
            </if>
            <if test="params != null">
                and (
                iut.login_name like concat(concat('%',#{params}),'%') or
                iut.real_name like concat(concat('%',#{params}),'%') OR
                iut.attribute15 LIKE concat(concat('%',#{params}),'%') OR
                iut.attribute14 LIKE concat(concat('%',#{params}),'%')
                )
            </if>
        </where>
        ) t
    </select>

    <select id="selectUserWithRolesOnSiteLevel" resultMap="userWithRolesMap">
        select t2.is_ldap,t2.id,t2.real_name,t2.login_name as login_name,t2.is_enabled,
        t2.is_locked,t2.organization_id,t2.email,t2.language,t2.time_zone, t2.phone,
        t2.object_version_number as user_version_number,
        fo2.tenant_name as user_org_name,fo2.tenant_num as user_org_code, ir2.id as role_id,ir2.code as role_code,
        ir2.name as role_name, ir2.is_enabled as role_is_enabled,ir2.h_tenant_id as role_org_id
        from
        (
        select distinct t1.*
        from
        (
        select iut.*
        from
        iam_user iut
        <if test="orgName != null">
            left join hpfm_tenant fo on fo.tenant_id = iut.organization_id
        </if>
        <if test="roleName != null">
            left join iam_member_role imr on (imr.member_id = iut.id and imr.member_type = 'user')
            left join iam_role ir on ir.id = imr.role_id
        </if>
        <where>
            <if test="orgName != null">
                and fo.tenant_name like concat(concat('%',#{orgName}),'%')
            </if>
            <if test="roleName != null">
                and imr.source_id = #{sourceId}
                and imr.source_type = #{sourceType}
                and ir.name like concat(concat('%',#{roleName}),'%')
            </if>
            <if test="realName != null">
                and iut.real_name LIKE concat(concat('%',#{realName}),'%')
            </if>
            <if test="loginName != null">
                and iut.login_name LIKE concat(concat('%',#{loginName}),'%')
            </if>
            <if test="enabled != null">
                and iut.is_enabled = #{enabled}
            </if>
            <if test="locked != null">
                and iut.is_locked = #{locked}
            </if>
            <if test="params != null">
                and (
                iut.login_name like concat(concat('%',#{params}),'%') or
                iut.real_name like concat(concat('%',#{params}),'%') OR
                iut.attribute15 LIKE concat(concat('%',#{params}),'%') OR
                iut.attribute14 LIKE concat(concat('%',#{params}),'%')
                )
            </if>
        </where>
        ) t1
        order by t1.is_enabled desc, t1.id desc
        <if test="start != null and size != null">
            limit #{start}, #{size}
        </if>
        ) t2
        left join iam_member_role imr2 on
        (imr2.member_id = t2.id and imr2.member_type = 'user' and imr2.source_id = #{sourceId} and imr2.source_type =
        #{sourceType})
        left join iam_role ir2 on ir2.id = imr2.role_id
        left join hpfm_tenant fo2 on (t2.organization_id = fo2.tenant_id)
    </select>


    <select id="selectRolesByUidAndProjectId" resultMap="RoleMap">
        SELECT ir.*,
               il.name     AS label_name,
               il.type     AS label_type,
               il.FD_LEVEL AS label_LEVEL
        FROM fd_project_permission fpu
                INNER JOIN iam_member_role imr on fpu.MEMBER_ROLE_ID = imr.id
                INNER JOIN iam_role ir ON imr.role_id = ir.id
                left JOIN hiam_label_rel hlr on hlr.data_id = ir.id
                Left JOIN iam_label il on il.id = hlr.label_id
        WHERE imr.member_id = #{id}
          AND fpu.project_id = #{projectId}
          AND hlr.data_type = 'ROLE'
    </select>

    <select id="selectRolesByUidsAndProjectId" resultMap="RoleVOMap">
        SELECT ir.*,
        imr.member_id AS user_id
        FROM fd_project_permission fpu
        INNER JOIN iam_member_role imr on fpu.MEMBER_ROLE_ID = imr.id
        INNER JOIN iam_role ir ON imr.role_id = ir.id
        left JOIN hiam_label_rel hlr on hlr.data_id = ir.id
        Left JOIN iam_label il on il.id = hlr.label_id
        WHERE fpu.project_id = #{projectId}
        AND hlr.data_type = 'ROLE'
        AND imr.member_id IN
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <resultMap id="userWithRoleAndImage" type="io.choerodon.iam.infra.dto.UserDTO" autoMapping="true"
               extends="userWithRolesMap">
        <result property="imageUrl" column="image_url"/>
    </resultMap>

    <!--<select id="fulltextSearch" resultMap="userDTO">
        SELECT * FROM iam_user WHERE 1=1
        <if test="userSearchDTO.loginName!= null">
            AND login_name LIKE concat(concat('%',#{userSearchDTO.loginName}),'%')
        </if>
        <if test="userSearchDTO.organizationId != null">
            AND organization_id = #{userSearchDTO.organizationId}
        </if>
        <if test="userSearchDTO.ldap != null">
            AND is_ldap = #{userSearchDTO.ldap}
        </if>
        <if test="userSearchDTO.realName != null">
            AND real_name LIKE concat(concat('%',#{userSearchDTO.realName}),'%')
        </if>
        <if test="userSearchDTO.enabled != null">
            AND is_enabled = #{userSearchDTO.enabled}
        </if>
        <if test="userSearchDTO.locked != null">
            AND is_locked = #{userSearchDTO.locked}
        </if>
        <if test="userSearchDTO.admin != null">
            AND is_admin = #{userSearchDTO.admin}
        </if>
        <if test="userSearchDTO.email != null">
            AND email LIKE concat(concat('%',#{userSearchDTO.email}),'%')
        </if>
        <if test="userSearchDTO.language != null">
            AND language LIKE concat(concat('%',#{userSearchDTO.language}),'%')
        </if>
        <if test="param != null">
            and (
            login_name LIKE concat(concat('%',#{param}),'%') OR
            email LIKE concat(concat('%',#{param}),'%') OR
            real_name LIKE concat(concat('%',#{param}),'%')
            )
        </if>
        order by id desc
    </select>-->

    <!--<select id="selectCountUsers" resultType="int">
        SELECT count(1)
        FROM (
        SELECT DISTINCT iut.id FROM
        (
        select iu.*,
        case when iu.is_ldap=1 then iu.login_name else iu.email end as login_name
        from iam_user iu
        ) iut
        LEFT JOIN iam_member_role imr on imr.member_id = iut.id
        LEFT JOIN iam_role ir on ir.id = imr.role_id
        WHERE imr.member_type = 'user'
        AND imr.source_id = #{sourceId}
        AND imr.source_type = #{sourceType}
        <if test="roleAssignmentSearchDTO != null">
            <if test="roleAssignmentSearchDTO.loginName != null">
                AND iut.login_name LIKE concat(concat('%',#{roleAssignmentSearchDTO.loginName}),'%')
            </if>
            <if test="roleAssignmentSearchDTO.realName != null">
                AND iut.real_name LIKE concat(concat('%',#{roleAssignmentSearchDTO.realName}),'%')
            </if>
            <if test="roleAssignmentSearchDTO.roleName != null">
                AND ir.name LIKE concat(concat('%',#{roleAssignmentSearchDTO.roleName}),'%')
            </if>
            <if test="param != null">
                AND (
                iut.login_name LIKE concat(concat('%',#{param}),'%') OR
                iut.real_name LIKE concat(concat('%',#{param}),'%') OR
                ir.name LIKE concat(concat('%',#{param}),'%') OR
                imr.member_type LIKE concat(concat('%',#{param}),'%')
                )
            </if>
        </if>
        ) t
    </select>-->

    <select id="selectUserCountFromMemberRoleByOptions" resultType="int">
        SELECT COUNT(1) FROM (
        SELECT DISTINCT iu.id FROM iam_member_role imr
        INNER JOIN iam_user iu ON imr.member_id = iu.id
        WHERE imr.role_id = #{roleId}
        AND imr.member_type = #{memberType}
        <if test="sourceId != null">
            AND imr.source_id = #{sourceId}
        </if>
        <if test="sourceType != null">
            AND imr.source_type = #{sourceType}
        </if>
        <if test="roleAssignmentSearchDTO != null">
            <if test="roleAssignmentSearchDTO.loginName != null">
                AND iu.login_name LIKE concat(concat('%',#{roleAssignmentSearchDTO.loginName}),'%')
            </if>
            <if test="roleAssignmentSearchDTO.realName != null">
                AND iu.real_name LIKE concat(concat('%',#{roleAssignmentSearchDTO.realName}),'%')
            </if>
        </if>
        <if test="param != null">
            AND (
            iu.login_name LIKE concat(concat('%',#{param}),'%') OR
            iu.real_name LIKE concat(concat('%',#{param}),'%')
            )
        </if>
        ) t
    </select>

    <!--<select id="selectUsersFromMemberRoleByOptions" resultMap="userDTO">
        SELECT iu.*,imr.source_id
        FROM iam_user iu
        INNER JOIN iam_member_role imr ON imr.member_id = iu.id
        <where>
            imr.member_type = #{memberType} and imr.source_type = #{sourceType}
            AND imr.source_id = #{sourceId} and imr.role_id = #{roleId}
            <if test="roleAssignmentSearchDTO != null">
                <if test="roleAssignmentSearchDTO.loginName != null">
                    AND iu.login_name LIKE concat(concat('%',#{roleAssignmentSearchDTO.loginName}),'%')
                </if>
                <if test="roleAssignmentSearchDTO.realName != null">
                    AND iu.real_name LIKE concat(concat('%',#{roleAssignmentSearchDTO.realName}),'%')
                </if>
                <if test="roleAssignmentSearchDTO.enabled != null">
                    AND iu.is_enabled = #{roleAssignmentSearchDTO.enabled}
                </if>
            </if>
            <if test="param != null">
                AND (
                iu.login_name LIKE concat(concat('%',#{param}),'%') OR
                iu.real_name LIKE concat(concat('%',#{param}),'%')
                )
            </if>
        </where>
        order by imr.creation_date desc
    </select>-->

    <select id="listUsersWithGitlabLabel" resultMap="projectUserWithRolesMap">
        SELECT
        iu.*,
        ir.id as role_id,
        ir.name as role_name,
        ir.code as role_code
        FROM
        iam_user iu
        INNER JOIN iam_member_role imr ON (iu.id = imr.member_id AND imr.member_type = 'user')
        INNER JOIN fd_project_permission fpu ON fpu.MEMBER_ROLE_ID = imr.id
        INNER JOIN iam_role ir ON (ir.id = imr.role_id AND ir.is_enabled = TRUE )
        INNER JOIN hiam_label_rel irl ON (irl.data_id = ir.id AND irl.data_type = 'ROLE')
        INNER JOIN iam_label il ON il.id = irl.label_id
        <where>
            AND fpu.PROJECT_ID = #{projectId} and il.`name` = #{labelName}
            <if test="roleAssignmentSearchDTO != null">
                <if test="roleAssignmentSearchDTO.loginName != null">
                    AND iu.login_name LIKE concat(concat('%',#{roleAssignmentSearchDTO.loginName}),'%')
                </if>
                <if test="roleAssignmentSearchDTO.realName != null">
                    AND iu.real_name LIKE concat(concat('%',#{roleAssignmentSearchDTO.realName}),'%')
                </if>
                <if test="roleAssignmentSearchDTO.enabled != null">
                    AND iu.is_enabled = #{roleAssignmentSearchDTO.enabled}
                </if>
            </if>
            <if test="param != null">
                AND (
                iu.login_name LIKE concat(concat('%',#{param}),'%') OR
                iu.real_name LIKE concat(concat('%',#{param}),'%')
                )
            </if>
        </where>
        order by fpu.creation_date desc
    </select>

    <!--<select id="selectUsersByProjectIdAndOptions" resultMap="userDTO">
        SELECT iam_user.*
        FROM iam_user
        JOIN
        (
        SELECT
        DISTINCT member_id
        FROM
        iam_member_role
        WHERE
        source_id = #{projectId}
        AND source_type = 'project'
        AND member_type = 'user'
        ) t
        ON iam_user.id = t.member_id
        WHERE 1=1
        <if test="userId != null">
            AND iam_user.id = #{userId}
        </if>
        <if test="email != null">
            AND iam_user.email LIKE concat(concat('%',#{email}),'%')
        </if>
        <if test="param != null">
            AND (
            iam_user.login_name LIKE concat(concat('%',#{param}),'%') OR
            iam_user.real_name LIKE concat(concat('%',#{param}),'%')
            )
        </if>
    </select>

    <select id="matchLoginName" resultType="java.lang.String">
        SELECT login_name
        FROM iam_user
        WHERE login_name
        IN
        <foreach item="item" index="index" collection="nameSet"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="getIdsByMatchLoginName" resultType="java.lang.Long">
        SELECT id
        FROM iam_user
        WHERE login_name
        IN
        <foreach item="item" index="index" collection="nameSet"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="disableListByIds">
        UPDATE iam_user
        SET is_enabled = 0
        WHERE id
        IN
        <foreach item="item" index="index" collection="idSet"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>-->


    <select id="matchEmail" resultType="java.lang.String">
        SELECT email
        FROM iam_user
        WHERE email
        IN
        <foreach item="item" index="index" collection="emailSet"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="matchPhone" resultType="java.lang.String">
        SELECT phone
        FROM iam_user
        WHERE is_enabled=1 and phone in
        <foreach item="item" index="index" collection="phoneSet" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!--<select id="totalNumberOfUsers" resultType="java.lang.Integer">
        SELECT
        COUNT(*)
        FROM
        iam_user
    </select>-->

    <select id="listOrgAdministrator" resultType="io.choerodon.iam.infra.dto.UserDTO">
        SELECT
        iu.id,
        iu.login_name as login_name,
        iu.EMAIL,
        iu.ORGANIZATION_ID,
        iu.REAL_NAME,
        iu.IS_ENABLED AS enabled,
        iu.IS_LOCKED AS locked,
        iu.IS_LDAP AS ldap,
        imr.creation_date
        FROM
        iam_member_role imr
        LEFT JOIN iam_role ir ON ir.ID = imr.ROLE_ID
        LEFT JOIN hiam_label_rel hlr ON hlr.data_id = ir.id AND hlr.data_type = 'ROLE'
        LEFT JOIN iam_label il ON il.id = hlr.label_id
        LEFT JOIN iam_user iu ON imr.MEMBER_ID = iu.ID
        WHERE
        il.name = 'TENANT_ADMIN'
        AND imr.source_type='organization'
        AND imr.source_id=#{organizationId}
        AND imr.member_type = 'user'
        <if test="realName != null">
            AND iu.real_name LIKE concat(concat('%',#{realName }),'%')
        </if>
        <if test="loginName  != null ">
            and iu.login_name LIKE concat(concat('%',#{loginName}),'%')
        </if>
        <if test="params != null">
            AND (
            iu.real_name LIKE concat(concat('%',#{params}),'%')
            OR iu.login_name LIKE concat(concat('%',#{params}),'%')
            OR iu.attribute15 LIKE concat(concat('%',#{params}),'%') OR
            iu.attribute14 LIKE concat(concat('%',#{params}),'%')
            )
        </if>
    </select>


    <select id="selectCountUsersOnOrganizationLevel" resultType="int">
        select count(1)
        from
        (
        select distinct t1.id
        from
        (
        select iut.*
        from
        iam_user iut
        left join iam_member_role imr on (imr.member_id = iut.id and imr.member_type = 'user')
        left join iam_role ir on ir.id = imr.role_id
        where imr.source_id = #{sourceId} and imr.source_type = #{sourceType}
        <if test="roleName != null">
            and ir.name like concat(concat('%',#{roleName}),'%')
        </if>
        <if test="roleName == null">
            union
            select iu2.*
            from iam_user iu2
            where iu2.organization_id = #{sourceId}
        </if>
        ) t1
        <where>
            <if test="realName != null">
                and t1.real_name LIKE concat(concat('%',#{realName}),'%')
            </if>
            <if test="loginName != null">
                and t1.login_name LIKE concat(concat('%',#{loginName}),'%')
            </if>
            <if test="enabled != null">
                and t1.is_enabled = #{enabled}
            </if>
            <if test="locked != null">
                and t1.is_locked = #{locked}
            </if>
            <if test="params != null">
                and (
                t1.login_name like concat(concat('%',#{params}),'%') or
                t1.real_name like concat(concat('%',#{params}),'%') OR
                t1.attribute15 LIKE concat(concat('%',#{params}),'%') OR
                t1.attribute14 LIKE concat(concat('%',#{params}),'%')
                )
            </if>
        </where>
        ) t
    </select>

    <select id="selectUserWithRolesOnOrganizationLevel" resultMap="userWithRolesMap">
        select t2.is_ldap,t2.id,t2.real_name,t2.login_name as login_name,t2.is_enabled,
        t2.is_locked,t2.organization_id, t2.email,t2.language,t2.time_zone, t2.phone,
        t2.object_version_number as user_version_number,
        ir2.id as role_id,ir2.code as role_code, ir2.name as role_name,ir2.is_enabled as
        role_is_enabled,ir2.h_tenant_id as role_org_id
        from
        (
        select distinct t1.* from
        (
        select iut.*
        from
        iam_user iut
        left join iam_member_role imr on (imr.member_id = iut.id and imr.member_type = 'user')
        left join iam_role ir on ir.id = imr.role_id
        left join hiam_label_rel hlr on (hlr.data_id = ir.id and hlr.data_type = 'ROLE')
        LEFT JOIN iam_label il on il.id = hlr.label_id
        where imr.source_id = #{sourceId} and imr.source_type = #{sourceType} and il.name = 'TENANT_ROLE'
        <if test="roleName != null">
            and ir.name like concat(concat('%',#{roleName}),'%')
        </if>
        <if test="roleName == null">
            union
            select iu2.*
            from iam_user iu2
            where iu2.organization_id = #{sourceId}
        </if>
        ) t1
        <where>
            <if test="realName != null">
                and t1.real_name LIKE concat(concat('%',#{realName}),'%')
            </if>
            <if test="loginName != null">
                and t1.login_name LIKE concat(concat('%',#{loginName}),'%')
            </if>
            <if test="enabled != null">
                and t1.is_enabled = #{enabled}
            </if>
            <if test="locked != null">
                and t1.is_locked = #{locked}
            </if>
            <if test="params != null">
                and (
                t1.login_name like concat(concat('%',#{params}),'%') or
                t1.real_name like concat(concat('%',#{params}),'%') OR
                iut.attribute15 LIKE concat(concat('%',#{params}),'%') OR
                iut.attribute14 LIKE concat(concat('%',#{params}),'%')
                )
            </if>
        </where>
        order by t1.is_enabled desc, t1.id desc
        <if test="start != null and size != null">
            limit #{start}, #{size}
        </if>
        ) t2
        left join iam_member_role imr2 on
        (imr2.member_id = t2.id and imr2.member_type = 'user' and imr2.source_id = #{sourceId} and imr2.source_type =
        #{sourceType})
        left join iam_role ir2 on ir2.id = imr2.role_id
    </select>

    <select id="selectCountUsersOnProjectLevel" resultType="int">
        select count(1)
        from
        (
        select distinct iut.id
        from
        iam_user iut
        left join iam_member_role imr on (imr.member_id = iut.id and imr.member_type = 'user')
        JOIN iam_role ir on ir.id=imr.role_id
        <if test="roleName != null">
            left join iam_role ir2 on ir2.id = imr.role_id
        </if>
        <where>
            imr.source_id = #{sourceId} and imr.source_type = #{sourceType}
            <if test="roleName != null">
                and ir.name like concat(concat('%',#{roleName}),'%')
            </if>
            <if test="realName != null">
                and iut.real_name LIKE concat(concat('%',#{realName}),'%')
            </if>
            <if test="loginName != null">
                and iut.login_name LIKE concat(concat('%',#{loginName}),'%')
            </if>
            <if test="enabled != null">
                and iut.is_enabled = #{enabled}
            </if>
            <if test="params != null">
                and (
                iut.login_name like concat(concat('%',#{params}),'%') or
                iut.real_name like concat(concat('%',#{params}),'%') or
                iut.attribute15 LIKE concat(concat('%',#{params}),'%') OR
                iut.attribute14 LIKE concat(concat('%',#{params}),'%')
                )
            </if>
        </where>
        ) t
    </select>

    <select id="selectUserWithRolesOnProjectLevel" resultMap="userWithRolesMap">
        select t2.id,t2.real_name,t2.login_name as login_name,t2.is_enabled,t2.is_ldap,
        t2.is_locked,t2.organization_id,t2.email,t2.language,t2.time_zone, t2.phone,t2.image_url,
        t2.object_version_number as user_version_number,
        fo.tenant_name as user_org_name,fo.tenant_num as user_org_code, ir2.id as role_id,ir2.code as role_code,
        ir2.name as role_name, ir2.is_enabled as role_is_enabled,ir2.h_tenant_id as role_org_id
        from
        (
        select distinct t1.*
        from
        (
        select iut.*
        from
        iam_user iut
        left join iam_member_role imr on (imr.member_id = iut.id and imr.member_type = 'user')
        JOIN iam_role ir2 on ir2.id=imr.role_id
        <if test="roleName != null">
            left join iam_role ir on ir.id = imr.role_id
        </if>
        <where>
            imr.source_id = #{sourceId} and imr.source_type = #{sourceType}
            <if test="roleName != null">
                and ir.name like concat(concat('%',#{roleName}),'%')
            </if>
            <if test="realName != null">
                and iut.real_name LIKE concat(concat('%',#{realName}),'%')
            </if>
            <if test="loginName != null">
                and iut.login_name LIKE concat(concat('%',#{loginName}),'%')
            </if>
            <if test="enabled != null">
                and iut.is_enabled = #{enabled}
            </if>
            <if test="params != null">
                and (
                iut.login_name like concat(concat('%',#{params}),'%') or
                iut.real_name like concat(concat('%',#{params}),'%') OR
                iut.attribute15 LIKE concat(concat('%',#{params}),'%') OR
                iut.attribute14 LIKE concat(concat('%',#{params}),'%')
                )
            </if>
        </where>
        ) t1
        order by t1.is_enabled desc, t1.id desc
        <if test="start != null and size != null">
            limit #{start}, #{size}
        </if>
        ) t2
        left join iam_member_role imr2 on
        (imr2.member_id = t2.id and imr2.member_type = 'user'
        and imr2.source_id = #{sourceId} and imr2.source_type = #{sourceType})
        left join iam_role ir2 on ir2.id = imr2.role_id
        left join hpfm_tenant fo on (t2.organization_id = fo.tenant_id)
    </select>

    <select id="listUserWithRolesOnProjectLevelByIds" resultMap="userWithRoleAndImage">
        select t2.id,t2.real_name,t2.login_name as login_name,t2.is_enabled, t2.image_url,
        t2.is_locked,t2.organization_id,t2.email,t2.language,t2.time_zone, t2.phone,
        t2.object_version_number as user_version_number,
        fo.tenant_name as user_org_name,fo.tenant_num as user_org_code, ir2.id as role_id,ir2.code as role_code,
        ir2.name as role_name, ir2.is_enabled as role_is_enabled,ir2.h_tenant_id as role_org_id
        from
        (
        select distinct t1.*
        from
        (
        select iut.*
        from
        (
        select iu.*
        from iam_user iu
        <if test="userIds != null and userIds.size() != 0">
            WHERE iu.ID IN
            <foreach collection="userIds" open="(" close=")" separator="," item="userId">
                #{userId,jdbcType=BIGINT}
            </foreach>
        </if>
        ) iut
        left join iam_member_role imr on (imr.member_id = iut.id and imr.member_type = 'user')
        JOIN iam_role ir2 on ir2.id=imr.role_id
        <where>
            imr.source_id = #{projectId,jdbcType=BIGINT} and imr.source_type = 'project'
        </where>
        ) t1
        ) t2
        left join iam_member_role imr2 on
        (imr2.member_id = t2.id and imr2.member_type = 'user'
        and imr2.source_id = #{projectId,jdbcType=BIGINT} and imr2.source_type = 'project')
        left join iam_role ir2 on ir2.id = imr2.role_id
        left join hpfm_tenant fo on (t2.organization_id = fo.tenant_id)
    </select>


    <select id="listUserWithRolesOnOrganizationLevelByIds" resultMap="userWithRoleAndImage">
        select t2.id,t2.real_name,t2.login_name as login_name,t2.is_enabled, t2.image_url,
        t2.is_locked,t2.organization_id, t2.email,t2.language,t2.time_zone, t2.phone,
        t2.object_version_number as user_version_number,
        ir2.id as role_id,ir2.code as role_code, ir2.name as role_name,ir2.is_enabled as
        role_is_enabled,ir2.h_tenant_id as role_org_id
        from
        (
        select distinct t1.* from
        (
        select iut.*
        from
        (
        select iu.*
        from iam_user iu
        <if test="userIds != null and userIds.size() != 0">
            WHERE iu.ID IN
            <foreach collection="userIds" open="(" close=")" separator="," item="userId">
                #{userId,jdbcType=BIGINT}
            </foreach>
        </if>
        ) iut
        left join iam_member_role imr on (imr.member_id = iut.id and imr.member_type = 'user')
        left join iam_role ir on ir.id = imr.role_id
        where imr.source_id = #{organization_id} and imr.source_type = 'organization'
        ) t1
        order by t1.is_enabled desc, t1.id desc
        ) t2
        left join iam_member_role imr2 on
        (imr2.member_id = t2.id and imr2.member_type = 'user' and imr2.source_id = #{organization_id} and
        imr2.source_type = 'organization')
        left join iam_role ir2 on ir2.id = imr2.role_id
    </select>

    <select id="listEnableUsersByName" resultMap="userDTO">
        select t.*
        from(
        (select iu.*
        from iam_user iu
        where iu.is_enabled = 1
        <choose>
            <when test="sourceType == 'site'">
                <if test="exactMatchFlag == true">
                    and (iu.real_name = #{userName} or iu.login_name = #{userName} or iu.email = #{userName} or iu.attribute15 = #{userName} or iu.attribute14 = #{userName})
                </if>
                <if test="exactMatchFlag == null or exactMatchFlag == false">
                    and (
                    iu.real_name like concat('%', concat(#{userName}, '%'))
                    or iu.login_name like concat('%', concat(#{userName}, '%'))
                    or iu.email like concat('%', concat(#{userName}, '%'))
                    or iu.attribute15 LIKE concat(concat('%',#{userName}),'%')
                    or iu.attribute14 LIKE concat(concat('%',#{userName}),'%')
                    )
                </if>
            </when>
            <otherwise>
                <if test="exactMatchFlag == true">
                    and (iu.real_name = #{userName} or iu.login_name = #{userName} or iu.email = #{userName} or iu.attribute15= #{userName} or iu.attribute14 = #{userName})
                </if>
                <if test="exactMatchFlag == null or exactMatchFlag == false">
                AND (( iu.real_name LIKE concat( '%', concat( #{userName}, '%' ) ) AND iu.organization_id = #{tenantId} )
                    OR ( iu.login_name LIKE concat( '%', concat( #{userName}, '%' ) ) AND iu.organization_id = #{tenantId} )
                    OR ( iu.email LIKE concat( '%', concat( #{userName}, '%' ) ) AND iu.organization_id = #{tenantId} )
                    OR ( iu.attribute15 LIKE concat( '%', concat( #{userName}, '%' ) ) AND iu.organization_id = #{tenantId} )
                    OR ( iu.attribute14 LIKE concat( '%', concat( #{userName}, '%' ) ) AND iu.organization_id = #{tenantId} ))
                </if>
                )
            </otherwise>
        </choose>
        <if test="sourceType == 'organization' or sourceType == 'project'">
            union
            select iu2.*
            from iam_user iu2
            where iu2.is_enabled = 1
            <if test="exactMatchFlag == true">
                and (iu2.real_name = #{userName} or iu2.login_name = #{userName} or iu2.email = #{userName} or iu2.attribute15= #{userName} or iu2.attribute14= #{userName})
            </if>
            <if test="exactMatchFlag == null or exactMatchFlag == false">
                and (
                iu2.real_name like concat('%', concat(#{userName}, '%'))
                or iu2.login_name like concat('%', concat(#{userName}, '%'))
                or iu2.email like concat('%', concat(#{userName}, '%'))
                or iu2.attribute15 LIKE concat(concat('%',#{userName}),'%')
                or iu2.attribute14 LIKE concat(concat('%',#{userName}),'%')
                )
            </if>

            <if test="sourceType == 'organization'">
                and iu2.organization_id IN
                <foreach collection="tenantIds" separator="," open="(" close=")" item="tenantId" index="i">
                    #{tenantId}
                </foreach>
            </if>
            <if test="sourceType == 'project'">
                and iu2.organization_id =
                (
                select fp.organization_id
                from fd_project fp
                where fp.id = #{sourceId}
                )
            </if>
        </if>
        )t
    </select>

    <select id="isOrgAdministrator" resultType="java.lang.Boolean">
        select count(imr.id)
        from iam_member_role imr
                 left join iam_role ir on imr.role_id = ir.id
                 left join hiam_label_rel hlr ON ir.id = hlr.data_id and hlr.data_type = 'ROLE'
                 left join iam_label il ON hlr.label_id = il.id
        where il.name = 'TENANT_ADMIN'
          and imr.source_type = 'organization'
          and imr.member_type = 'user'
          and imr.source_id = #{organizationId}
          and imr.member_id = #{userId}
    </select>

    <select id="checkIsGitlabProjectOwner" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM iam_member_role imr
                 INNER JOIN iam_label il ON il.`name` = 'project.gitlab.owner'
                 INNER JOIN iam_role_label irl ON irl.label_id = il.id
                 INNER JOIN iam_role ir ON ir.id = irl.role_id
        WHERE imr.role_id = ir.id
          AND imr.member_type = 'user'
          AND imr.member_id = #{id}
          AND imr.source_type = 'project'
          AND imr.source_id = #{projectId}
    </select>
    <select id="listProjectUsersByProjectIdAndRoleLabel" resultType="io.choerodon.iam.infra.dto.UserDTO">
        SELECT iu.*
        FROM iam_member_role imr
                 INNER JOIN iam_user iu ON iu.id = imr.member_id
                 INNER JOIN iam_role ir ON imr.role_id = ir.id
                 INNER JOIN iam_role_label irl ON irl.role_id = ir.id
                 INNER JOIN iam_label il ON il.id = irl.label_id
        WHERE imr.member_type = 'user'
          AND imr.source_id = #{projectId}
          AND imr.source_type = 'project'
          AND il.name = #{roleLabel}
    </select>
    <!--一个用户对应多个角色标签，使用GROUP BY去重-->
    <select id="listUsersByName" resultType="io.choerodon.iam.infra.dto.UserDTO">
        SELECT iu.*
        FROM iam_member_role imr
        INNER JOIN iam_user iu ON iu.id = imr.member_id
        INNER JOIN iam_role ir ON imr.role_id = ir.id
        INNER JOIN iam_role_label irl ON irl.role_id = ir.id
        INNER JOIN iam_label il ON il.id = irl.label_id
        WHERE imr.member_type = 'user' AND imr.source_id = #{projectId}
        AND imr.source_type = 'project'
        AND (il.name = 'project.owner' OR il.name = 'project.gitlab.owner' OR il.name = 'project.gitlab.developer')
        <if test="param != null">
            AND (iu.login_name LIKE concat(concat('%', #{param}),'%') OR iu.real_name LIKE concat(concat('%',
            #{param}),'%'))
        </if>
        GROUP BY iu.id
    </select>

    <select id="queryAllOrgAdmin" resultType="io.choerodon.iam.infra.dto.UserDTO">
        SELECT DISTINCT iu.id,
                        iu.organization_id
        FROM iam_user iu,
             iam_member_role imr
        WHERE iu.id = imr.member_id
          AND imr.role_id = #{roleId}
    </select>

    <select id="listProjectOwnerById" resultType="io.choerodon.iam.infra.dto.UserDTO">
        SELECT iu.id,
               iu.email,
               iu.real_name,
               iu.phone,
               iu.login_name
        FROM iam_user iu
                 JOIN iam_member_role imr ON iu.id = imr.member_id
                 JOIN iam_role ir ON ir.id = imr.role_id
        WHERE imr.source_type = 'project'
          AND ir.code = 'role/project/default/project-owner'
          AND imr.source_id = #{projectId}
    </select>

    <select id="listUsersByNameWithLimit" resultType="io.choerodon.iam.infra.dto.UserDTO">
        SELECT iu.*
        FROM iam_member_role imr
        INNER JOIN iam_user iu ON iu.id = imr.member_id
        WHERE imr.member_type = 'user' AND imr.source_id = #{projectId}
        AND imr.source_type = 'project'
        <if test="param != null">
            AND (iu.login_name LIKE concat(concat('%', #{param}),'%') OR iu.real_name LIKE concat(concat('%',
            #{param}),'%'))
        </if>
        GROUP BY iu.id
        limit 20
    </select>

    <select id="listManagedOrgIdByUserId" resultType="java.lang.Long">
        SELECT imr.source_id
        FROM iam_member_role imr
        LEFT JOIN iam_role ir ON ir.id = imr.role_id
        LEFT JOIN hiam_label_rel hlr on hlr.data_id = ir.id
        LEFT JOIN iam_label il ON il.id = hlr.label_id
        <where>
            imr.member_type = 'user' AND imr.source_type = 'organization' AND imr.member_id = #{userId}
            AND hlr.data_type = 'ROLE'
            AND il.name = 'TENANT_ADMIN'
            AND imr.source_id in
            <foreach collection="orgIds" separator="," open="(" close=")" item="orgId" index="i">
                #{orgId}
            </foreach>
        </where>
    </select>

    <select id="queryUserByLoginName" resultType="io.choerodon.iam.infra.dto.UserDTO">
        SELECT iu.*
        FROM iam_user iu
        WHERE iu.login_name = #{loginName,jdbcType=VARCHAR} or iu.email = #{loginName,jdbcType=VARCHAR}
    </select>

    <select id="selectAllUsersSimplifiedInfo" resultMap="simplifiedUserDTO">
        SELECT
        id,
        login_name,
        real_name,
        image_url,
        email,
        is_ldap AS ldap
        FROM
        iam_user
        WHERE
        is_enabled = 1
        <if test="params != null">
            AND (
            login_name = #{params} OR
            real_name = #{params} OR
            email = #{params})
        </if>
    </select>

    <select id="selectUsersOptional" resultMap="simplifiedUserDTO">
        select id, login_name, real_name, image_url, email,is_ldap AS ldap
        from iam_user
        where organization_id = #{organizationId}
        and is_enabled = 1
        <if test="params != null">
            AND (
            login_name LIKE concat(concat('%',#{params}),'%') OR
            real_name LIKE concat(concat('%',#{params}),'%') OR
            email LIKE concat(concat('%',#{params}),'%') OR
            attribute15 LIKE concat(concat('%',#{params}),'%') OR
            attribute14 LIKE concat(concat('%',#{params}),'%')
            )
        </if>
        union
        select id, login_name, real_name, image_url, email, is_ldap AS ldap
        from iam_user
        where organization_id != #{organizationId}
        and is_enabled = 1
        <if test="params != null">
            AND (
            login_name = #{params} OR
            real_name = #{params} OR
            email = #{params} OR
            attribute15 = #{params} OR
            attribute14 = #{params}
            )
        </if>
    </select>
    <select id="listOrganizationUser" resultType="org.hzero.iam.domain.entity.User">
        SELECT *
        FROM (
            SELECT iu.id, iu.email, iu.organization_id, iu.real_name, iu.phone, iu.image_url,
            iu.is_enabled as enabled, iu.is_ldap as ldap, iu.is_admin as admin,iu.is_locked as locked,
            iu.object_version_number,iu.attribute15,iu.attribute14,iu.login_name
            FROM iam_user iu
            LEFT JOIN iam_member_role imr ON iu.id = imr.member_id AND imr.source_id = #{organizationId} AND imr.source_type = 'organization'
            LEFT JOIN iam_role ir ON ir.id = imr.role_id
            <where>
                (iu.organization_id = #{organizationId} OR (imr.id IS NOT NULL))
                <if test="roleName != null">
                    AND ir.name LIKE concat(concat('%',#{roleName}),'%')
                </if>
                <if test="realName != null">
                    AND iu.real_name LIKE concat(concat('%',#{realName}),'%')
                </if>
                <if test="enabled != null">
                    AND iu.is_enabled = #{enabled}
                </if>
                <if test="locked != null">
                    AND iu.is_locked = #{locked}
                </if>
            </where>
            GROUP BY iu.id
        ) iut
        <where>
            <if test="loginName != null">
                AND iut.login_name LIKE concat(concat('%',#{loginName}),'%')
            </if>
            <if test="params != null">
                and (
                iut.login_name LIKE concat(concat('%',#{params}),'%') OR
                iut.real_name LIKE concat(concat('%',#{params}),'%') OR
                iut.attribute15 LIKE concat(concat('%',#{params}),'%') OR
                iut.attribute14 LIKE concat(concat('%',#{params}),'%')
                )
            </if>
        </where>
    </select>

    <select id="queryUserLabelsInProjectLevel" resultType="String">
        SELECT il.name AS label_name
        FROM fd_project_permission fpu
                 INNER JOIN iam_role ir ON fpu.MEMBER_ROLE_ID = ir.id
                 INNER JOIN iam_member_role imr on fpu.MEMBER_ROLE_ID = imr.id
                 left JOIN hiam_label_rel hlr on hlr.data_id = ir.id
                 Left JOIN iam_label il on il.id = hlr.label_id
        WHERE imr.member_id = #{userId}
          AND fpu.project_id = #{projectId}
          AND hlr.data_type = 'ROLE'
    </select>

    <select id="doesUserHaveLabelInProject" resultType="boolean">
        SELECT COUNT(1)
        FROM fd_project_permission fpu
        INNER JOIN iam_member_role imr ON fpu.MEMBER_ROLE_ID = imr.id
        INNER JOIN iam_role ir ON ir.id = imr.role_id
        left JOIN hiam_label_rel hlr on hlr.data_id = ir.id
        Left JOIN iam_label il on il.id = hlr.label_id
        WHERE imr.member_id = #{userId}
        AND fpu.project_id = #{projectId}
        AND hlr.data_type = 'ROLE'
        AND il.name = #{labelName}
    </select>

    <select id="listSiteUsersByRoleId" resultMap="userWithRolesMap">
        SELECT iu.*,ir.id AS role_id
        FROM iam_role ir
        INNER JOIN iam_member_role imr ON imr.role_id = ir.id
        INNER JOIN iam_user iu ON iu.id = imr.member_id
        WHERE imr.member_type = 'user' AND imr.source_id = 0 AND imr.source_type = 'site' and ir.id = #{roleId}
    </select>
    <select id="listOrgUsersByRoleId" resultMap="userWithRolesMap">
        SELECT
            iu.id AS id,
            iu.real_name,
            iu.login_name,
            iu.is_enabled,
            iu.is_locked,
            iu.email,
            iu.is_ldap,
            ir.id AS role_id,
            ir.`name` AS role_name,
            ir.`code` AS role_code,
            iu.organization_id
        FROM iam_role ir
        INNER JOIN iam_member_role imr ON imr.role_id = ir.id
        INNER JOIN iam_user iu ON iu.id = imr.member_id
        WHERE imr.member_type = 'user' AND imr.source_id = #{tenantId} AND imr.source_type = 'organization' AND ir.id = #{roleId}

    </select>
    <select id="listProjectUsersByRoleId" resultMap="userWithRolesMap">
        SELECT *
        FROM iam_role ir
        INNER JOIN iam_member_role imr ON imr.role_id = ir.id
        INNER JOIN fd_project_permission fpu ON fpu.MEMBER_ROLE_ID = imr.id
        INNER JOIN iam_user iu ON iu.id = imr.member_id
        WHERE imr.member_type = 'user' AND imr.source_type = 'organization' AND ir.id = #{roleId} and fpu.PROJECT_ID = #{projectId}
    </select>

    <select id="listUsersUnderRoleByIds" resultMap="userWithRolesMap">
        SELECT
        distinct
        iu.id,
        iu.email,
        iu.login_name,
        iu.real_name,
        iu.organization_id,
        iu.phone,
        iu.is_ldap,
        iu.is_admin,
        ir.id as role_id,
        ir.name as role_name,
        ir.code as role_code,
        ir.is_enabled as role_is_enabled
        FROM iam_role ir
        INNER JOIN iam_member_role imr ON imr.role_id = ir.id
        INNER JOIN fd_project_permission fpu ON fpu.MEMBER_ROLE_ID = imr.id
        INNER JOIN iam_user iu ON iu.id = imr.member_id
        WHERE imr.member_type = 'user'
        AND imr.source_type = 'organization'
        and fpu.PROJECT_ID = #{projectId}
        and iu.is_enabled = 1
        <if test="roleIds != null and roleIds.size() > 0">
            and ir.id in
            <foreach collection="roleIds" item="roleId" open="(" close=")" separator=",">
                #{roleId}
            </foreach>
        </if>
    </select>

    <select id="queryPersonalInfo" resultMap="UserDTOMap">
        SELECT iu.*, ht.tenant_name, ht.tenant_num, hui.phone_check_flag
        FROM iam_user iu
        LEFT JOIN hpfm_tenant ht ON iu.organization_id = ht.tenant_id
        LEFT JOIN hiam_user_info hui ON hui.user_id=iu.id
        WHERE iu.id = #{userId}
    </select>

    <select id="listRoleLabelsForUserInTheProject" resultMap="userProjectLabels">
        SELECT fpu.PROJECT_ID, imr.member_id, il.name AS label_name
        FROM fd_project_permission fpu
        INNER JOIN iam_member_role imr ON fpu.MEMBER_ROLE_ID = imr.id AND imr.member_type = 'user'
        INNER JOIN iam_role ir ON imr.role_id = ir.id
        INNER JOIN hiam_label_rel hlr on ir.id = hlr.data_id AND hlr.data_type = 'ROLE'
        INNER JOIN iam_label il ON hlr.label_id = il.id
        WHERE imr.member_id = #{userId,jdbcType=BIGINT}
        AND fpu.PROJECT_ID IN
        <foreach collection="projectIds" item="projectId" open="(" close=")" separator=",">
            #{projectId,jdbcType=BIGINT}
        </foreach>
    </select>

    <select id="listAllUserIds" resultType="java.lang.Long">
        SELECT iam_user.id
        FROM iam_user
    </select>

    <update id="updatePinyinById">
        UPDATE iam_user
        SET attribute15 = #{pinyin}
        WHERE
            id = #{userId};
    </update>

    <update id="updatePinyinHeadCharById">
        UPDATE iam_user
        SET attribute14 = #{pinyinHeadChar}
        WHERE
            id = #{userId};
    </update>

    <select id="queryUserRoleLevels" resultType="java.lang.String">
        SELECT ir.fd_level
        FROM iam_member_role imr
             INNER JOIN iam_role ir ON imr.role_id = ir.id
        WHERE imr.member_type = 'user' AND imr.member_id = #{userId}
    </select>
    <update id="updateUserPhoneBind">
        UPDATE iam_user
        SET phone_bind = #{false}
        WHERE
        id = #{userId};
    </update>
    <select id="platformAdministrator" resultType="boolean">
        SELECT
	       count(imr.id)
        FROM
	       iam_member_role imr
	    JOIN iam_role ir ON imr.role_id = ir.id
        WHERE
	       imr.source_type = 'site'
	    AND imr.member_type = 'user'
	    AND imr.source_id = 0
	    AND (ir.CODE = 'role/site/default/administrator' OR ir.CODE = 'role/site/default/auditor')
	    AND imr.member_id = #{userId,jdbcType=BIGINT}
    </select>

    <select id="adminOrgList" resultType="org.hzero.iam.domain.entity.Tenant">
        SELECT
            ht.*
        FROM
        	iam_member_role imr
        	LEFT JOIN iam_role ir ON imr.role_id = ir.id
        	LEFT JOIN hiam_label_rel hlr ON ir.id = hlr.data_id
        	AND hlr.data_type = 'ROLE'
        	LEFT JOIN iam_label il ON hlr.label_id = il.id
        	JOIN hpfm_tenant ht ON imr.source_id = ht.tenant_id
        WHERE
        	il.NAME = 'TENANT_ADMIN'
        	AND imr.source_type = 'organization'
        	AND imr.member_type = 'user'
        	AND ht.enabled_flag= 1
        	AND imr.member_id = #{userId,jdbcType=BIGINT}
            AND ht.tenant_id !=0
    </select>

    <select id="listSiteAdministrator" resultType="org.hzero.iam.domain.entity.User">
         SELECT
            iu.*
        FROM
            iam_user iu
            JOIN iam_role ir ON ir.`code` = 'role/site/default/administrator'
                                AND ir.fd_level = 'site'
            JOIN iam_member_role imr ON imr.member_id = iu.id
                                        AND imr.role_id = ir.id
    </select>

    <select id="queryPhoneBind" resultType="java.lang.Boolean">
         SELECT
            iu.phone_bind
        FROM
            iam_user iu
        where iu.id=#{userId}
    </select>

    <update id="updateUserLoginName">
        UPDATE iam_user
        SET login_name = #{loginName}
        WHERE
        id = #{userId}
    </update>

    <update id="updateUserLoginNameForOpen">
        UPDATE hiam_user_open_account huoa
        SET huoa.username = #{loginName}
        WHERE
        huoa.username = #{oldLoginName}
    </update>

    <select id="listAgileUserOnOrganizationLevel" resultType="org.hzero.iam.domain.entity.User">
        SELECT *
        FROM (
        SELECT iu.id, iu.email, iu.organization_id, iu.real_name, iu.phone, iu.image_url,
        iu.is_enabled as enabled, iu.is_ldap as ldap, iu.is_admin as admin,iu.is_locked as locked,
        iu.object_version_number,iu.attribute15,iu.attribute14,iu.login_name
        FROM iam_user iu
        LEFT JOIN iam_member_role imr ON iu.id = imr.member_id AND imr.source_id = #{organizationId} AND imr.source_type = 'organization'
        LEFT JOIN iam_role ir ON ir.id = imr.role_id
        <where>
            (iu.organization_id = #{organizationId} OR (imr.id IS NOT NULL))
            <if test="agileUserVO != null">
                <if test="agileUserVO.userIds != null and agileUserVO.userIds.size > 0">
                    AND iu.id in
                    <foreach collection="agileUserVO.userIds" item="userId" open="(" close=")" separator=",">
                        #{userId}
                    </foreach>
                </if>
                <if test="agileUserVO.ignoredUserIds != null and agileUserVO.ignoredUserIds.size > 0">
                    AND iu.id not in
                    <foreach collection="agileUserVO.ignoredUserIds" item="ignoredUserId" open="(" close=")" separator=",">
                        #{ignoredUserId}
                    </foreach>
                </if>
                <if test="agileUserVO.roleName != null">
                    AND ir.name LIKE concat(concat('%',#{agileUserVO.roleName}),'%')
                </if>
                <if test="agileUserVO.realName != null">
                    AND iu.real_name LIKE concat(concat('%',#{agileUserVO.realName}),'%')
                </if>
                <if test="agileUserVO.enabled != null">
                    AND iu.is_enabled = #{agileUserVO.enabled}
                </if>
                <if test="agileUserVO.locked != null">
                    AND iu.is_locked = #{agileUserVO.locked}
                </if>
            </if>
        </where>
        GROUP BY iu.id
        ) iut
        <where>
        <if test="agileUserVO != null">
            <if test="agileUserVO.loginName != null">
                AND iut.login_name LIKE concat(concat('%',#{agileUserVO.loginName}),'%')
            </if>
            <if test="agileUserVO.param != null">
                and (
                iut.login_name LIKE concat(concat('%',#{agileUserVO.param}),'%') OR
                iut.real_name LIKE concat(concat('%',#{agileUserVO.param}),'%') OR
                iut.attribute15 LIKE concat(concat('%',#{agileUserVO.param}),'%') OR
                iut.attribute14 LIKE concat(concat('%',#{agileUserVO.param}),'%')
                )
            </if>
        </if>
        </where>
    </select>

    <select id="listUsersOnProjectLevelPage" resultType="org.hzero.iam.domain.entity.User">
        select iu.*
           from iam_user iu
           where iu.is_enabled = 1

        AND (
        (iu.real_name LIKE concat( '%', concat( #{userName}, '%' ) ))
        OR ( iu.login_name LIKE concat( '%', concat( #{userName}, '%' ) ) )
        OR ( iu.email LIKE concat( '%', concat( #{userName}, '%' ) ) )
        OR ( iu.attribute15 LIKE concat( '%', concat( #{userName}, '%' ) ) )
        OR ( iu.attribute14 LIKE concat( '%', concat( #{userName}, '%' ) ) )
        )
        ORDER BY iu.organization_id <![CDATA[ <> ]]> #{tenantId,jdbcType=BIGINT}

    </select>
</mapper>
